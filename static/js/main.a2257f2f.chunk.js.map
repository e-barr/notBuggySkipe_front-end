{"version":3,"sources":["apis/db.js","history.js","actions/index.js","actions/types.js","components/Header.js","components/ProfileTile.js","components/Utils.js","components/EditProfile.js","components/InvitesTile.js","components/ViewInvites.js","components/MeetingRoomTile.js","components/AddressBook.js","components/ViewAddressBook.js","components/SendInviteForm.js","components/ViewAddContacts.js","components/Content.js","components/LoginForm.js","components/About.js","components/ContactUs.js","components/SignUpForm.js","components/App.js","reducers/authReducer.js","reducers/contentReducer.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","createHistory","isEditingProfile","type","toggleShowInvites","toggleSendInviteForm","toggleAddContacts","Header","location","this","props","isSignedIn","react_default","a","createElement","Link","to","style","color","textShadow","className","onClick","logout","Component","connect","state","auth","history","push","localStorage","clear","ProfileTile","username","_this$props","city","country","image_url","src","alt","concat","renderField","_ref","input","label","meta","error","touched","Object","assign","placeholder","_ref2","renderError","EditProfile","onSubmit","formValues","currentUser","_this","submitProfileChanges","renderForm","email","handleSubmit","Field","name","component","value","formWrapped","reduxForm","form","validate","errors","initialValues","updatedValues","_ref6","asyncToGenerator","regenerator_default","mark","_callee4","dispatch","token","updatedUser","resp","payload","headersConfig","returnedFunc","wrap","_context4","prev","next","objectSpread","headers","Authorization","db","patch","user","Content-Type","sent","data","swal","t0","message","abrupt","stop","_x4","apply","arguments","invitesTileStyle","marginTop","marginBottom","marginLeft","InvitesTile","ViewInvites","renderInvite","inviteId","otherUser","room","content","key","id","textAlign","textOverflow","length","startMeeting","invite_id","deleteInvite","renderReceivedInvites","invites","console","log","map","invite","sender","renderSentInvites","receiver","_this$props$currentUs","received_invites","sent_invites","meeting_id","_ref8","_callee6","_context6","_x6","user_id","_ref7","_callee5","_context5","delete","_x5","MeetingRoomTile","meeting_room","paddingBottom","title","allow","scrolling","endMeeting","addressBookStyle","AddressBook","toggleViewAddressBook","addressCardStyle","fontSize","ViewAddressBook","getUniqueContacts","contacts","contact","user_2","contactIds","uniqueContactIds","forEach","contactId","includes","find","renderContacts","setInviteReceiver","deleteContact","marginRight","_ref9","_callee7","_context7","_x7","inviteReceiver","SendInviteForm","sender_id","receiver_id","room_name","roomName","sendInvite","_ref10","_ref11","_callee8","_context8","post","_x8","ViewAddContacts","getPossibleContacts","ownContacts","getOwnUniqueContacts","ownId","allUsers","ownContactsIds","filter","ids","uniqueIds","renderPossibleContacts","addContact","fetchAllUsers","_ref12","_callee9","_context9","get","_x9","user_1_id","user_2_id","_ref13","_callee10","resp2","payload2","_context10","t1","_x10","Content","_this$props$user","_this$props$content","isEditing","isViewingInvites","isStartingMeeting","isViewingAddressBook","isViewingSendInviteForm","isViewingAddContacts","src_components_MeetingRoomTile","components_EditProfile","components_ViewInvites","components_ViewAddressBook","components_SendInviteForm","components_ViewAddContacts","components_ProfileTile","components_InvitesTile","components_AddressBook","LoginForm","login","password","_callee","_context","jwt","_x","About","href","ContactUs","SignUpForm","signUp","confirmPassword","_ref4","_ref5","_callee3","_context3","_x3","App","getUserInfo","Router","components_Header","Switch","Route","path","exact","_ref3","_callee2","_context2","_x2","defaultState","loginError","jwtToken","isViewingAllUsers","enteredRoom","inviteMessage","inviteRoomName","combineReducers","undefined","action","formReducer","updatedDefault","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","src_components_App","document","querySelector"],"mappings":"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","file":"static/js/main.a2257f2f.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default axios.create({\n    baseURL: 'https://not-buggy-skipe.herokuapp.com'\n})","import createHistory from 'history/createBrowserHistory'\n\nexport default createHistory();","import { \n    LOGIN,\n    SIGN_UP,\n    LOGOUT,\n    GET_USER_INFO,\n    IS_EDITING_PROFILE,\n    SUBMIT_PROFILE_CHANGES,\n    TOGGLE_SHOW_INVITES,\n    START_MEETING,\n    END_MEETING,\n    TOGGLE_VIEW_ADDRESS_BOOK,\n    TOGGLE_SEND_INVITE_FORM,\n    SET_INVITE_INFO,\n    SET_INVITE_RECEIVER,\n    SET_INVITE_MESSAGE_AND_ROOM_NAME,\n    TOGGLE_ADD_CONTACTS,\n    SET_ALL_USERS\n} from './types'\nimport db from '../apis/db'\nimport swal from 'sweetalert'\nimport history from '../history'\n\nexport const login = ({ username, password }) => async dispatch => {\n    let resp = {}\n    try {\n        resp = await db.post('/api/v1/login', {\n            user: { username, password },\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n    } catch (error) {\n        resp = { error: error.message }\n        swal(\"Invalid credentials\", \"Invalid username and/or password. Please try again.\", \"error\")\n    }\n\n    const payload = resp.data\n\n    if (!payload.error && payload.jwt.length > 0) {\n        localStorage.token = payload.jwt\n    }\n\n    dispatch({\n        type: LOGIN,\n        payload\n    })\n\n    history.push(\"/main\")\n}\n\nexport const logout = () => {\n    history.push(\"/\")\n    localStorage.clear()\n\n    return {\n        type: LOGOUT\n    }\n}\n\nexport const getUserInfo = () => async dispatch => {\n    const token = localStorage.token\n    let resp = {}\n\n    try {\n        resp = await db.get('/api/v1/profile', {\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        })\n    } catch (error) {\n        resp = { error: error.message }\n        swal(\"Invalid credentials\", \"Invalid username and/or password. Please try again.\", \"error\")\n    }\n\n    const payload = resp.data.user\n\n    dispatch({\n        type: GET_USER_INFO,\n        payload\n    })\n\n    history.push(\"/main\")\n}\n\nexport const signUp = ({ email, username, password, confirmPassword, city, country, image_url }) => async dispatch => {\n    \n    let resp = {}\n    let payload\n\n    if (password === confirmPassword) {\n        try {\n            resp = await db.post('/api/v1/users', {\n                user: { email, username, password, city, country, image_url },\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            payload = resp.data\n            localStorage.token = payload.jwt\n            swal(\"Success!\", \"Your account has been successfully created. You will now be redirected to the main page.\", \"success\")\n            history.push(\"/main\")\n        } catch (error) {\n            resp = { error: error.message }\n            swal(\"Account creation failed.\", `${resp.error}`, \"error\")\n        }\n    }\n\n    dispatch({\n        type: SIGN_UP,\n        payload\n    })\n}\n\nexport const submitProfileChanges = (currentUser, updatedValues) => async dispatch => {\n    const { email, username, city, country, image_url } = updatedValues\n    const token = localStorage.token\n    let updatedUser = { ...currentUser, email, username, city, country, image_url }\n    let resp = {}\n    let payload;\n    const headersConfig = { headers: {\n        'Authorization' : `Bearer ${token}`\n    }}\n\n    try {\n        resp = await db.patch('/api/v1/profile', {\n            user: { ...updatedUser },\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }, headersConfig)\n        payload = resp.data.user\n        swal(\"Success!\", \"Your account has been successfully updated.\", \"success\")\n    } catch (error) {\n        resp = { error: error.message }\n        swal(\"Profile update failed.\", `${resp.error}`, \"error\")\n    }\n\n    let returnedFunc = (dispatch) => {\n        dispatch({\n            type: SUBMIT_PROFILE_CHANGES,\n            payload\n        })\n        \n        dispatch({\n            type: GET_USER_INFO,\n            payload\n        })\n    }\n\n    return dispatch(returnedFunc)\n}\n\nexport const isEditingProfile = () => {\n    return {\n        type: IS_EDITING_PROFILE\n    }\n}\n\nexport const toggleShowInvites = () => {\n    return {\n        type: TOGGLE_SHOW_INVITES\n    }\n}\n\nexport const deleteInvite = (id, user_id) => async dispatch => {\n    \n    const token = localStorage.token\n    let resp = {}\n    let payload\n\n    try {\n        resp = await db.delete('/api/v1/invites', {\n            data: {\n                invite: { id, user_id }\n            },\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : `Bearer ${token}`\n            },\n        })\n        payload = resp.data.user\n    } catch (error) {\n        resp = { error: error.message }\n        swal(\"Invitation failed to delete.\", `${resp.error}`, \"error\")\n    }\n\n    dispatch({\n        type: GET_USER_INFO,\n        payload\n    })\n}\n\nexport const startMeeting = (currentUser, meeting_id) => async dispatch => {\n    const updatedUser = { ...currentUser, meeting_id }\n    let resp = {}\n    let payload;\n    let token = localStorage.token\n\n    const headersConfig = { headers: {\n        'Authorization' : `Bearer ${token}`\n    }}\n\n    try {\n        resp = await db.patch('/api/v1/profile', {\n            user: updatedUser,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }, headersConfig)\n        payload = resp.data.user\n    } catch (error) {\n        resp = { error: error.message }\n        swal(\"Meeting entrance failed.\", `${resp.error}`, \"error\")\n    }\n\n\n    let returnedFunc = (dispatch) => {\n        dispatch({\n            type: GET_USER_INFO,\n            payload\n        })\n\n        dispatch({\n            type: START_MEETING\n        })\n\n    }\n\n    return dispatch(returnedFunc)\n}\n\nexport const endMeeting = () => {\n    return {\n        type: END_MEETING\n    }\n}\n\nexport const toggleViewAddressBook = () => {\n    return {\n        type: TOGGLE_VIEW_ADDRESS_BOOK\n    }\n}\n\nexport const deleteContact = (id) => async dispatch => {\n   \n    const token = localStorage.token\n    let resp = {}\n    let payload\n\n    try {\n        resp = await db.delete('/api/v1/contacts', {\n            data: {\n                contact: { id }\n            },\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : `Bearer ${token}`\n            },\n        })\n        payload = resp.data.user\n    } catch (error) {\n        resp = { error: error.message }\n        swal(\"Contact failed to delete.\", `${resp.error}`, \"error\")\n    }\n\n    dispatch({\n        type: GET_USER_INFO,\n        payload\n    })\n}\n\nexport const toggleSendInviteForm = () => {\n    return {\n        type: TOGGLE_SEND_INVITE_FORM\n    }\n}\n\nexport const setInviteInfo = (inviteReceiver, inviteMessage, inviteRoomName) => {\n    return {\n        type: SET_INVITE_INFO,\n        payload: { inviteReceiver, inviteMessage, inviteRoomName }\n    }\n}\n\nexport const setInviteReceiver = (inviteReceiver) => {\n    return {\n        type: SET_INVITE_RECEIVER,\n        payload: inviteReceiver\n    }\n}\n\nexport const setInviteMessageAndRoomName = (inviteMessage, roomName) => {\n    return {\n        type: SET_INVITE_MESSAGE_AND_ROOM_NAME,\n        payload: { inviteMessage, roomName }\n    }\n}\n\nexport const sendInvite = ({ sender_id, receiver_id, room_name, content }) => async dispatch => {\n    const token = localStorage.token\n    let resp = {}\n    let payload\n\n    try {\n        resp = await db.post('/api/v1/invites', {\n            invite: {\n                sender_id,\n                receiver_id,\n                room_name,\n                content\n            }},\n            { \n                headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n                }\n            }\n        )\n        swal(\"Success!\", \"Your invitation has been sent.\", \"success\")\n    } catch (error) {\n        resp = { error: error.message }\n        swal(\"Invite creation failed\", \"Please be sure that your room name is unique. Note that no message is required.\", \"error\")\n    }\n\n    payload = resp.data.user\n\n    let returnedFunc = (dispatch) => {\n        dispatch({\n            type: TOGGLE_SEND_INVITE_FORM\n        })\n\n        dispatch({\n            type: GET_USER_INFO,\n            payload\n        })\n\n    }\n\n    return dispatch(returnedFunc)\n}\n\nexport const toggleAddContacts = () => {\n    return {\n        type: TOGGLE_ADD_CONTACTS\n    }\n}\n\nexport const fetchAllUsers = () => async dispatch => {\n    let resp = {}\n    let payload\n    const token = localStorage.token\n\n    try {\n        resp = await db.get('/api/v1/users', {\n            headers: {\n                'Authorization' : `Bearer ${token}`\n            }\n        })\n    } catch (error) {\n        resp = { error: error.message }\n        swal(\"Fetch all users failed\", `${resp.error}`, \"error\")\n    }\n\n    payload = resp.data\n\n    dispatch({\n        type: SET_ALL_USERS,\n        payload\n    })\n}\n\nexport const addContact = (user_1_id, user_2_id) => async dispatch => {\n    let resp = {}\n    let resp2 = {}\n    let payload\n    let payload2\n    const token = localStorage.token\n\n    try {\n        resp = await db.post('/api/v1/contacts',\n            {\n                contact: {\n                    user_1_id,\n                    user_2_id\n                }\n            },\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization' : `Bearer ${token}`\n                }\n            }\n        )\n        swal(\"Success!\", \"Your have added a new contact.\", \"success\")\n    } catch (error) {\n        resp = { error: error.message }\n        swal(\"Failed to add contact.\", `${resp.error}`, \"error\")\n    }\n    payload = resp.data.user\n\n    try {\n        resp2 = await db.get('/api/v1/users', {\n            headers: {\n                'Authorization' : `Bearer ${token}`\n            }\n        })\n        payload2 = resp2.data\n    } catch (error) {\n        resp2 = { error: error.message }\n        swal(\"Fetch all users failed\", `${resp2.error}`, \"error\")\n    }\n\n    let returnedFunc = dispatch => {\n        dispatch({\n            type: GET_USER_INFO,\n            payload\n        })\n\n        dispatch({\n            type: SET_ALL_USERS,\n            payload: payload2\n        })\n    }\n\n    return dispatch(returnedFunc)\n}","export const LOGIN = 'LOGIN'\nexport const SIGN_UP = 'SIGN_UP'\nexport const LOGOUT = 'LOGOUT'\nexport const GET_USER_INFO = 'GET_USER_INFO'\nexport const IS_EDITING_PROFILE = 'IS_EDIT_PROFILE'\nexport const SUBMIT_PROFILE_CHANGES = 'SUBMIT_PROFILE_CHANGES'\nexport const TOGGLE_SHOW_INVITES = 'TOGGLE_SHOW_INVITES'\nexport const START_MEETING = 'START_MEETING'\nexport const END_MEETING = 'END_MEETING'\nexport const TOGGLE_VIEW_ADDRESS_BOOK = 'TOGGLE_VIEW_ADDRESS_BOOK'\nexport const DELETE_CONTACT = 'DELETE_CONTACT'\nexport const TOGGLE_SEND_INVITE_FORM = 'TOGGLE_SEND_INVITE_FORM'\nexport const SET_INVITE_INFO = 'SET_INVITE_INFO'\nexport const SET_INVITE_RECEIVER = 'SET_INVITE_RECEIVER'\nexport const SET_INVITE_MESSAGE_AND_ROOM_NAME = 'SET_INVITE_MESSAGE_AND_ROOM_NAME'\nexport const TOGGLE_ADD_CONTACTS = 'TOGGLE_ADD_CONTACTS'\nexport const CREATE_CONTACT = 'CREATE_CONTACT'\nexport const FETCH_ALL_USERS = 'FETCH_ALL_USERS'\nexport const SET_ALL_USERS = 'SET_ALL_USERS'\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { logout } from '../actions'\n\nclass Header extends Component {\n    render() {\n        let location\n        this.props.isSignedIn ? location = \"/main\" : location = \"/\"\n        return (\n            <div>\n                <Link to={location}><h1 style={{ color: 'red', textShadow: '#CCC 1px 0 10px'}}>TwoChat</h1></Link>\n                <div className=\"ui borderless menu\">    \n                        { this.props.isSignedIn ? <Link to=\"/main\" className=\"item\">Home</Link> : <Link to=\"/login\" className=\"item\">Login</Link>}\n                        <Link to=\"/about\" className=\"item\">About</Link>\n                        <Link to=\"/contact\" className=\"item\">Contact</Link>\n                        <div className=\"right menu\">\n                            <div className=\"item\">\n                                { this.props.isSignedIn ? \n                                <button \n                                    onClick={this.props.logout}\n                                    className=\"ui red button\"\n                                >\n                                    Logout\n                                </button> : <Link to=\"/signup\" className=\"ui green button\">Sign Up</Link> }\n                            </div>\n                        </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isSignedIn: state.auth.isSignedIn\n    }\n}\n\nexport default connect(mapStateToProps, { logout })(Header);","import React, { Component } from 'react'\n\nclass ProfileTile extends Component {\n    render() {\n        if (this.props.username) {\n            const { username, city, country, image_url } = this.props\n            return (\n                <div className=\"card\">\n                    <div className=\"image\">\n                        <img \n                        src={image_url}\n                        alt={`${username}`}\n                        />\n                    </div>\n                    <div className=\"content\">\n                            <button \n                                className=\"ui right floated icon button\"\n                                onClick={this.props.isEditingProfile}\n                            >\n                                <i className=\"edit icon\"></i>\n                            </button>\n                        <div className=\"header\">\n                            <h2>{username}</h2>\n                        </div>\n                        <div className=\"description\">\n                            <p>{`${city}, ${country}`}</p>\n                        </div>\n                    </div>\n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n}\n\nexport default ProfileTile;","import React from 'react'\n\nexport const renderField = ({ input, label, meta, type }) => {\n    const renderError = ({ error, touched }) => {\n        if (error && touched) {\n            return (\n                <div className=\"ui error\">\n                    <div className=\"header\">{error}</div>\n                </div>\n            )\n        }\n    }\n\n    const className = `field ${meta.error && meta.touched ? 'error' : ''}`\n\n    return (\n        <div className={className}>\n            <label>{label}</label>\n            <input {...input} \n            placeholder={label}\n            type={type} />\n            <div>{renderError(meta)}</div>\n        </div>\n    )\n}\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\n\nimport { renderField } from './Utils'\nimport { submitProfileChanges, isEditingProfile } from '../actions'\n\n\nclass EditProfile extends Component {\n    onSubmit = (formValues) => {\n        const { currentUser } = this.props\n        this.props.submitProfileChanges(currentUser, formValues)\n    }\n\n    renderForm = ({ email, username, city, country, image_url }) => {\n        return(\n            <div>\n                <form\n                    className=\"ui form error\"\n                    onSubmit={this.props.handleSubmit(this.onSubmit)}\n                >\n\n                    <Field\n                        name=\"email\"\n                        label=\"email\"\n                        component={renderField}\n                        value={email}\n                    />\n\n                    <Field \n                        name=\"username\"\n                        label=\"username\"\n                        component={renderField}\n                        value={username}\n                    />\n\n                    <Field \n                        name=\"city\"\n                        label=\"city\"\n                        component={renderField}\n                        value={city}\n                    />\n\n                    <Field \n                        name=\"country\"\n                        label=\"country\"\n                        component={renderField}\n                        value={country}\n                    />\n\n                    <Field\n                        name=\"image_url\"\n                        label=\"image url\"\n                        component={renderField}\n                        value={image_url}\n                    />\n\n                    <button\n                        className=\"ui green button\"\n                        type=\"submit\"\n                    >\n                        Submit\n                    </button>\n\n\n                    <button\n                        className=\"ui right floated button\"\n                        onClick={this.props.isEditingProfile}\n                    >\n                        Cancel\n\n                    </button>\n                </form>\n\n            </div>\n        )\n    }\n\n    render() {\n        const { currentUser } = this.props\n            return(\n                <div className=\"ui raised padded text container segment\">\n                    <h1>Profile</h1>\n                    {this.renderForm(currentUser)}\n                </div>\n            )\n        }\n}\n\nconst validate = ({ email, username, city, country, image_url }) => {\n    const errors = {}\n\n    if (!email) {\n        errors.email = 'You must enter an email'\n    }\n\n    if (!username) {\n        errors.username = 'You must enter a username'\n    }\n\n    if (!city) {\n        errors.city = 'You must enter a city'\n    }\n\n    if (!country) {\n        errors.country = 'You must enter a country'\n    }\n\n    if (!image_url) {\n        errors[image_url] = 'You must enter an image url.'\n    }\n\n    return errors\n}\n\nconst formWrapped = reduxForm({\n    form: 'editProfileForm',\n    validate\n})(EditProfile);\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.auth.currentUser,\n        initialValues: state.auth.currentUser\n    }\n}\n\nexport default connect(mapStateToProps, { submitProfileChanges, isEditingProfile })(formWrapped);","import React from 'react'\n\nconst invitesTileStyle = {\n    marginTop: '90px',\n    marginBottom: '80px',\n    marginLeft: '20px',\n    color: 'rgb(245, 194, 194)',\n    textShadow: '2px 2px 4px grey'\n}\n\nconst InvitesTile = (props) => {\n    return(\n        <div\n            className=\"card\"\n            onClick={props.toggleShowInvites}\n        >\n            <div className=\"image\">\n                <i className=\"massive envelope outline icon\"\n                style={invitesTileStyle}\n                ></i>\n            </div>\n        </div>\n    )\n}\n\nexport default InvitesTile;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { toggleShowInvites, deleteInvite, startMeeting } from '../actions'\n\nclass ViewInvites extends Component {\n    renderInvite = (inviteId, otherUser, room, content) => {\n        const { image_url, username } = otherUser\n\n        return (\n            <div className=\"column\" key={room.id}>\n                <div className=\"ui segment\">\n                    <div className=\"content\" >\n                        <div>\n                            <h2 className=\"ui top attached header\">\n                                <img \n                                    className=\"ui circular image\"\n                                    src={image_url}\n                                    alt={username}\n                                />\n                                {username}\n                            </h2>\n                        </div>\n                        <div className=\"ui attached segment\" >\n                            <div style={{ textAlign: 'center', textOverflow: 'clip'}}>\n                                {room.name}<br></br>\n                                {content.length === 0 ? '---' : content }\n                            </div>\n                        </div>\n                            <div className=\"ui two bottom attached buttons\">\n                                <button \n                                    className=\"ui float right green button\"\n                                    onClick={() => this.props.startMeeting(this.props.currentUser, room.id)}\n                                    >Start</button>\n                                <button\n                                    className=\"ui red button\"\n                                    invite_id={inviteId}\n                                    onClick={() => this.props.deleteInvite(inviteId, this.props.currentUser.id)}\n                                >Cancel</button>\n                            </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderReceivedInvites = (invites) => {\n        console.log(invites)\n        return (\n            <div className=\"ui four column grid\">\n                {invites.map((invite) => this.renderInvite(invite.id, invite.sender, invite.room, invite.content))}\n            </div>\n        )\n    }\n\n    renderSentInvites = (invites) => {\n        return (\n            <div className=\"ui four column grid\">\n                {invites.map((invite) => this.renderInvite(invite.id, invite.receiver, invite.room))}\n            </div>\n        )\n    }\n\n    render() {\n        const { received_invites, sent_invites } = this.props.currentUser\n        return (\n            <div className=\"ui raised padded container segment\">\n            <div>\n                <h1>Invites</h1><br></br>\n                    <div className=\"container\">\n                        <h4>RECEIVED</h4>\n                    \n                            <div className=\"ui stackable divided grid\">\n                                {this.renderReceivedInvites(received_invites)}\n                            </div>\n                        <h4>SENT</h4><br></br>\n                            <div className=\"ui stackable divided grid\">\n                                {this.renderSentInvites(sent_invites)}\n                            </div>\n                            <br></br>\n                            <br></br>\n                    </div>\n            <button\n                className=\"ui right floated button\"\n                onClick={this.props.toggleShowInvites}\n                >\n                Close\n            </button>\n            <br></br>\n            <br></br>\n            </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.auth.currentUser\n    }\n}\n\nexport default connect(mapStateToProps, { startMeeting, toggleShowInvites, deleteInvite })(ViewInvites);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { endMeeting } from '../actions'\nimport './MeetingRoomTile.css'\n\nclass MeetingRoomTile extends Component {\n    render() {\n        const room = this.props.currentUser.meeting_room\n\n        if (this.props.currentUser && room) {\n        return (\n            <div className=\"ui raised padded container segment\" style={{ paddingBottom: '9%' }}>\n\n                <h2>{room.name}</h2>\n                <div className=\"iframe-container\">\n                    <iframe\n                    src={`https://tokbox.com/embed/embed/ot-embed.js?embedId=cb6af7f6-5ac4-4691-9850-07636964bfb7&room=${room.name}&iframe=true`}\n                    title={room.name}\n                    allow=\"microphone; camera\"\n                    scrolling=\"no\"\n                    ></iframe>\n\n                    </div>\n                    <button\n                    className=\"ui right floated red button\"\n                    style={{ marginTop: '2%' }}\n                    onClick={this.props.endMeeting}\n                    >\n                    End\n                    </button>\n\n                    </div>\n        )} else {\n            return null\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.auth.currentUser\n    }\n}\nexport default connect(mapStateToProps, { endMeeting })(MeetingRoomTile);","import React from 'react'\n\nconst addressBookStyle = {\n    marginTop: '90px',\n    marginBottom: '80px',\n    marginLeft: '20px',\n    color: 'rgb(245, 194, 194)',\n    textShadow: '2px 2px 4px grey'\n}\n\nconst AddressBook = (props) => {\n    return (\n        <div\n            className=\"card\"\n            onClick={props.toggleViewAddressBook}\n        >\n            <div className=\"image\">\n            <i className=\"massive address book outline icon\" style={addressBookStyle}></i>\n            </div>\n        </div>\n    )\n}\n\nexport default AddressBook;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n    deleteContact,\n    setInviteReceiver,\n    toggleAddContacts\n} from '../actions'\n\nconst addressCardStyle = {\n    fontSize: '36px',\n    marginTop: '30px'\n}\n\nclass ViewAddressBook extends Component {\n    getUniqueContacts = () => {\n        const contacts = this.props.user.contacts.map(contact => contact.user_2)\n        const contactIds = contacts.map(contact => contact.id)\n\n        const uniqueContactIds = []\n\n        contactIds.forEach(contactId => uniqueContactIds.includes(contactId) === false ? uniqueContactIds.push(contactId) : null)\n\n        const uniqueContacts = uniqueContactIds.map(contactId => contacts.find(contact => contact.id === contactId))\n\n        return uniqueContacts\n    }\n\n    renderContacts = contacts => {\n        return contacts.map(contact => {\n            const user = contact.user_2\n            const { username, image_url } = user\n            return (\n                <div className=\"card\" key={contact.id}>\n                    <div className=\"content\">\n                        <div\n                        className=\"description\"\n                        style={addressCardStyle}\n                        >\n                            {username}\n                        </div>\n                        <img className=\"ui floated right tiny image\"\n                        src={image_url}\n                        alt={username}\n                        />\n                    </div>\n                    <div className=\"extra content\">\n                        <div className=\"ui two buttons\">\n                            <div\n                                className=\"ui basic green button\"\n                                onClick={() => {\n                                    this.props.setInviteReceiver(user)\n                                    this.props.toggleSendInviteForm()\n                                    }\n                                }\n                            >\n                                Send Invite\n                            </div>\n                            <div\n                            className=\"ui basic red button\"\n                            onClick={() => this.props.deleteContact(contact.id)}\n                            >\n                                Delete\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n    }\n    render() {\n        const contacts = this.props.contacts\n        return (\n            <div className=\"ui raised padded container segment\">\n                    <h1>AddressBook</h1><button \n                        className=\"circular ui right floated icon button\"\n                        style={{ marginTop: '-45px', marginRight: '5px'}}\n                        onClick={this.props.toggleAddContacts}\n                        >\n                        <i className=\"plus icon\"></i>\n                        </button>\n                <div className=\"ui cards\">\n                    {this.renderContacts(contacts)}\n                    <br></br>\n                    <br></br>\n                </div>\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n                <button\n                    className=\"ui right floated button\"\n                    onClick={this.props.toggleViewAddressBook}\n                    style={{ marginTop: '-35px' }}\n                    >\n                    Close\n                </button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.auth.currentUser\n    }\n}\n\nexport default connect(mapStateToProps, { deleteContact, setInviteReceiver, toggleAddContacts })(ViewAddressBook);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\n\nimport { toggleSendInviteForm, sendInvite } from '../actions'\nimport { renderField } from './Utils'\n\nclass SendInviteForm extends Component {\n    onSubmit = (formValues) => {\n        const sender_id = this.props.user.id\n        const receiver_id = this.props.content.inviteReceiver.id\n        const room_name = formValues.roomName\n        const content = formValues.message || ''\n\n        this.props.sendInvite({ sender_id, receiver_id, room_name, content })\n\n    }\n\n    renderForm = () => {\n        return (\n            <form\n                className=\"ui form error\"\n                onSubmit={this.props.handleSubmit(this.onSubmit)}\n\n            >\n\n                <Field\n                    name=\"roomName\"\n                    label=\"room name\"\n                    component={renderField}\n                    type=\"text\"\n                />\n                <Field\n                    name=\"message\"\n                    label=\"message *(optional)\"\n                    component={renderField}\n                    type=\"text\"\n                />\n\n                <button\n                    className=\"ui green button\"\n                    type=\"submit\"\n                >\n                    Submit\n                </button>\n\n                <button\n                        className=\"ui right floated button\"\n                        onClick={this.props.toggleSendInviteForm}\n                    >\n                    Cancel</button>\n            </form>\n        )\n    }\n\n    render() {\n        if (this.props.user) {\n            const receiver = this.props.content.inviteReceiver\n            return (\n                <div className=\"ui raised padded text containe segment\">\n                    <h2>Invite to {receiver.username}</h2>\n                    \n                    {this.renderForm()}\n                </div>\n            )\n        } else {\n            return <div>SendInviteForm</div>\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.auth.currentUser,\n        content: state.content\n    }\n}\n\nconst validate = ({ roomName }) => {\n    const errors = {}\n\n    if (!roomName) {\n        errors.roomName = 'You must enter a unique room name.'\n    }\n\n    return errors\n}\n\nconst formWrapped = reduxForm({\n    form: 'sendInviteForm',\n    validate\n})(SendInviteForm)\n\nexport default connect(mapStateToProps, { toggleSendInviteForm, sendInvite })(formWrapped);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { toggleAddContacts, fetchAllUsers, addContact } from '../actions'\n\nclass ViewAddContacts extends Component {\n    componentDidMount() {\n        this.props.fetchAllUsers()\n    }\n\n    getPossibleContacts = () => {\n        const ownContacts = this.getOwnUniqueContacts()\n        const ownId = this.props.user.id\n        const allUsers = this.props.allUsers\n        const ownContactsIds = ownContacts.map(contact => contact.id)\n        \n        const possibleContacts = allUsers.filter(user => ownContactsIds.includes(user.id) === false && user.id !== ownId)\n\n        return possibleContacts\n    }\n\n    getOwnUniqueContacts = () => {\n        const contacts = this.props.user.contacts.map(contact => contact.user_2)\n        let ids = contacts.map(contact => contact.id)\n\n        let uniqueIds = []\n\n        ids.forEach(id => uniqueIds.includes(id) === false ? uniqueIds.push(id) : null)\n\n        let uniqueContacts = uniqueIds.map(id => contacts.find(contact => contact.id === id))\n\n        return uniqueContacts\n    }\n\n    renderPossibleContacts = () => {\n        const user = this.props.user\n\n        if (!this.props.allUsers) {\n            return (\n                <div className=\"ui active centered inline loader\"></div>\n            )\n        }\n\n        const contacts = this.getPossibleContacts()\n        return contacts.map(contact => {\n            return (\n                <div className=\"item\" key={contact.id}>\n                    <div className=\"right floated content\">\n                        <button\n                            className=\"ui right floated green button\"\n                            onClick={() => this.props.addContact(user.id, contact.id)}\n                        >Add</button>\n                    </div>\n                    <img\n                        className=\"ui avatar image\"\n                        src={contact.image_url}\n                        alt={contact.username}\n                    />\n                    <div className=\"content\">\n                        {contact.username}\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"ui raised padded container segment\">\n                <h2>Add Contacts</h2>\n                <div\n                    className=\"ui middle aligned divided list\"\n                >\n                    {this.renderPossibleContacts()}\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                </div>\n                <button\n                    className=\"ui right floated button\"\n                    style={{ marginTop: '-35px' }}\n                    onClick={this.props.toggleAddContacts}\n                >Close</button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        allUsers: state.content.allUsers,\n        user: state.auth.currentUser\n    }\n}\n\nexport default connect(mapStateToProps, { toggleAddContacts, fetchAllUsers, addContact  })(ViewAddContacts);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport ProfileTile from './ProfileTile'\nimport EditProfile from './EditProfile'\nimport InvitesTile from './InvitesTile'\nimport ViewInvites from './ViewInvites'\nimport MeetingRoomTile from './MeetingRoomTile'\nimport AddressBook from './AddressBook'\nimport ViewAddressBook from './ViewAddressBook'\nimport SendInviteForm from './SendInviteForm'\nimport ViewAddContacts from './ViewAddContacts'\nimport { \n    isEditingProfile,\n    toggleShowInvites,\n    toggleViewAddressBook,\n    toggleSendInviteForm\n} from '../actions'\n\nclass Content extends Component {\n    render() {\n        if (this.props.user) {\n            const { username, city, country, image_url, contacts } = this.props.user\n            const { isEditing, isViewingInvites, isStartingMeeting, isViewingAddressBook, isViewingSendInviteForm, isViewingAddContacts } = this.props.content\n\n            if (isStartingMeeting) {\n                return (\n                    <MeetingRoomTile />\n                )\n            } else if (isEditing) {\n                return (\n                    <EditProfile />\n                )\n            } else if (isViewingInvites) {\n                return (\n                    <ViewInvites\n                        user={this.props.user}\n                    />\n                )\n            } else if (isViewingAddressBook) {\n                return (\n                    <ViewAddressBook\n                        toggleViewAddressBook={this.props.toggleViewAddressBook}\n                        contacts={contacts}\n                        toggleSendInviteForm={this.props.toggleSendInviteForm}\n                    />\n                )\n            } else if (isViewingSendInviteForm) {\n                return (\n                    <SendInviteForm />\n                )\n            } else if (isViewingAddContacts) {\n                return (\n                    <ViewAddContacts />\n                )\n            } else {\n                return (\n                    <div className=\"ui raised padded text container segment\">\n                        <div className=\"ui three stackable cards\">\n                            <ProfileTile\n                                username={username}\n                                city={city}\n                                country={country}\n                                image_url={image_url}\n                                isEditingProfile={this.props.isEditingProfile}\n                            />\n                            <InvitesTile \n                                toggleShowInvites={this.props.toggleShowInvites}\n                            />\n                            <AddressBook\n                                toggleViewAddressBook={this.props.toggleViewAddressBook}\n                            />\n                        </div>\n                    </div>\n                )\n            }\n        } else {\n            return null\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.auth.currentUser,\n        content: state.content\n    }\n}\n\nexport default connect(mapStateToProps, { isEditingProfile, toggleShowInvites, toggleViewAddressBook, toggleSendInviteForm })(Content);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\nimport { renderField } from './Utils'\n\n\nimport { login } from '../actions'\n\nclass LoginForm extends Component {\n    onSubmit = (formValues) => {\n        this.props.login(formValues)\n    }\n\n    renderForm = () => {\n        return (\n            <form className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                <Field \n                    name=\"username\"\n                    label=\"username\"\n                    component={renderField}\n                    type=\"text\"\n                />\n                <Field \n                    name=\"password\"\n                    label=\"password\"\n                    component={renderField}\n                    type=\"password\"\n                />\n                <button \n                    className=\"ui green button\"\n                    type=\"submit\"\n                >\n                    Submit\n                </button>\n                </form>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"ui raised padded text container segment\">\n            <h2>Login</h2>\n                {this.renderForm()}\n            </div>\n        )\n    }\n}\n\nconst validate = (formValues) => {\n    const errors = {}\n\n    if (!formValues.username) {\n        errors.username = 'You must enter a username'\n    }\n\n    if (!formValues.password) {\n        errors.password = 'You must enter a password'\n    }\n\n    return errors\n}\n\nconst formWrapped = reduxForm({\n    form: 'loginForm',\n    validate\n})(LoginForm);\n\nexport default connect(null, { login })(formWrapped);","import React from 'react'\n\nconst About = () => {\n    return (\n        <div className=\"ui raised padded text container segment inverse\">\n            <h2 className=\"ui header\">About</h2>\n            <div>\n                <p>This is a one-on-one video chat app, created by <a href=\"https://github.com/e-barr\">e-barr</a>.</p>\n\n                <p>To get started, please login or sign up using the links above.</p>\n            </div>\n        </div>\n    )\n}\nexport default About","import React from 'react'\n\nconst ContactUs = () => {\n    return (\n        <div className=\"ui raised padded text container segment\">\n            <h2 className=\"ui header\">Contact</h2>\n            <p>If you have any questions, please feel free to contact me at <a href=\"https://github.com/e-barr\">e-barr</a>. If a video demo is more convenient, please feel free to visit the following youtube link: <a href=\"https://www.youtube.com/watch?v=JCo-uO7zeHQ&t=20s\">https://www.youtube.com/watch?v=JCo-uO7zeHQ&t=20s</a>.</p>\n        </div>\n    )\n}\n\nexport default ContactUs","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\n\nimport { renderField } from './Utils'\nimport { signUp } from '../actions'\n\nclass SignUpForm extends Component {\n    onSubmit = (formValues) => {\n        this.props.signUp(formValues)\n        return (\n            <div className=\"ui active centered inline loader\"></div>\n        )\n    }\n\n    renderForm = () => {\n        return (\n            <form\n            className=\"ui form error\"\n            onSubmit={this.props.handleSubmit(this.onSubmit)}>\n\n                <Field\n                    name=\"email\"\n                    label=\"email\"\n                    component={renderField}\n                    type=\"text\"\n                />\n                <Field\n                    name=\"username\"\n                    label=\"username\"\n                    component={renderField}\n                    type=\"text\"\n                />\n                <Field\n                    name=\"password\"\n                    label=\"password\"\n                    component={renderField}\n                    type=\"password\"\n                />\n                <Field\n                    name=\"confirmPassword\"\n                    label=\"confirm password\"\n                    component={renderField}\n                    type=\"password\"\n                />\n                <Field\n                    name=\"city\"\n                    label=\"city\"\n                    component={renderField}\n                    type=\"text\"\n                />\n                <Field\n                    name=\"country\"\n                    label=\"country\"\n                    component={renderField}\n                    type=\"text\"\n                />\n                <Field\n                    name=\"image_url\"\n                    label=\"image url\"\n                    component={renderField}\n                    type=\"text\"\n                />\n\n                <button\n                    className=\"ui button\"\n                    type=\"submit\"\n                >\n                    Submit\n                </button>\n            </form>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"ui raised padded text container segment\">\n                <h1>Sign Up</h1>\n                {this.renderForm()}\n            </div>\n        )\n    }\n}\n\nconst validate = ({ email, username, password, confirmPassword, city, country, image_url }) => {\n    const errors = {}\n\n    if (!email) {\n        errors.email = 'You must enter an email'\n    }\n\n    if (!username) {\n        errors.username = 'You must enter a username'\n    }\n\n    if (!password) {\n        errors.password = 'You must enter a password'\n    }\n\n    if (password !== confirmPassword) {\n        errors.confirmPassword = 'Your passwords do not match'\n    }\n\n    if (!city) {\n        errors.city = 'You must enter a city'\n    }\n\n    if (!country) {\n        errors.country = 'You must enter a country'\n    }\n\n    if (!image_url) {\n        errors[image_url] = 'You must enter an image url.'\n    }\n\n    return errors\n}\n\nconst formWrapped = reduxForm({\n    form: 'signUpForm',\n    validate\n})(SignUpForm);\n\nexport default connect(null, { signUp })(formWrapped);","import React, { Component } from 'react'\nimport { Router, Switch, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Header from './Header'\nimport Content from './Content'\nimport LoginForm from './LoginForm'\nimport About from './About'\nimport ContactUs from './ContactUs'\nimport SignUpForm from './SignUpForm'\nimport './App.css'\nimport history from '../history'\nimport { getUserInfo } from '../actions'\n\nclass App extends Component {\n  componentDidMount() {\n    if (localStorage.token) {\n      this.props.getUserInfo()\n    }\n  }\n\n  render() {\n    return (\n      <Router history={history}>\n      <div className=\"main\">\n        <div className=\"ui container\">\n            <Header />\n            <Switch>\n              <Route path=\"/main\" exact component={Content} />\n              <Route path=\"/login\" component={LoginForm} exact />\n              <Route path=\"/about\" component={About} exact />\n              <Route path=\"/contact\" component={ContactUs} />\n              <Route path=\"/signup\" component={SignUpForm} />\n              <Route path=\"/\" component={About} />\n            </Switch>\n        </div>\n      </div>\n      </Router>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  }\n}\n\nexport default connect(mapStateToProps, { getUserInfo })(App);\n","import { \n    LOGIN,\n    LOGOUT,\n    SIGN_UP,\n    GET_USER_INFO\n} from '../actions/types'\n\nconst defaultState = {\n    isSignedIn: false,\n    currentUser: null,\n    loginError: null,\n    jwtToken: null,\n}\n\nexport default (state = defaultState, action) => {\n    let { jwt, user } = action.payload || \"\"\n\n    switch(action.type) {\n        case LOGIN:\n            return { \n                ...state,\n                currentUser: user,\n                jwtToken: jwt,\n                isSignedIn: true\n            };\n        case LOGOUT:\n            return { ...defaultState };\n        case SIGN_UP:\n            return {\n                ...state,\n                currentUser: user,\n                jwtToken: jwt,\n                isSignedIn: true\n            };\n        case GET_USER_INFO:\n            return { \n                ...state,\n                currentUser: action.payload,\n                jwtToken: localStorage.token,\n                isSignedIn: true\n            };\n        default:\n            return state;\n    }\n}","import { \n    IS_EDITING_PROFILE,\n    SUBMIT_PROFILE_CHANGES,\n    TOGGLE_SHOW_INVITES,\n    START_MEETING,\n    END_MEETING,\n    TOGGLE_VIEW_ADDRESS_BOOK,\n    TOGGLE_SEND_INVITE_FORM,\n    SET_INVITE_RECEIVER,\n    TOGGLE_ADD_CONTACTS,\n    SET_ALL_USERS,\n } from '../actions/types'\n\nconst defaultState = {\n    isEditing: false,\n    isViewingAllUsers: false,\n    isStartingMeeting: false,\n    enteredRoom: false,\n    isViewingInvites: false,\n    isViewingAddressBook: false,\n    isViewingSendInviteForm: false,\n    isViewingAddContacts: false,\n    inviteReceiver: null,\n    inviteMessage: '',\n    inviteRoomName: null,\n    allUsers: null\n}\n\n\nexport default (state = defaultState, action) => {\n    const { inviteReceiver, inviteMessage, inviteRoomName } = state\n    const updatedDefault = {\n        ...state,\n        inviteReceiver,\n        inviteMessage,\n        inviteRoomName\n    }\n   \n    switch(action.type) {\n        case IS_EDITING_PROFILE:\n            const isEditing = !state.isEditing\n            return {\n                ...updatedDefault,\n                isEditing\n            };\n        case SUBMIT_PROFILE_CHANGES:\n            return {\n                ...defaultState\n            };\n        case TOGGLE_SHOW_INVITES:\n            const isViewingInvites = !state.isViewingInvites\n            return {\n                ...updatedDefault,\n                isViewingInvites\n            }\n        case START_MEETING:\n            return {\n                ...updatedDefault,\n                isStartingMeeting: true\n            }\n        case END_MEETING:\n            return {\n                ...updatedDefault,\n                isStartingMeeting: false,\n            }\n        case TOGGLE_VIEW_ADDRESS_BOOK:\n            const isViewingAddressBook = !state.isViewingAddressBook\n            return {\n                ...updatedDefault,\n                isViewingAddressBook\n            }\n        case TOGGLE_SEND_INVITE_FORM:\n            const isViewingSendInviteForm = !state.isViewingSendInviteForm\n            return {\n                ...defaultState,\n                isViewingSendInviteForm,\n                inviteReceiver\n            }\n        case SET_INVITE_RECEIVER:\n            return {\n                ...updatedDefault,\n                inviteReceiver: action.payload\n            }\n        case TOGGLE_ADD_CONTACTS:\n            const isViewingAddContacts = !state.isViewingAddContacts\n            return {\n                ...defaultState,\n                isViewingAddContacts\n            }\n        case SET_ALL_USERS:\n            const allUsers = action.payload\n            return {\n                ...state,\n                allUsers\n            }\n        default:\n            return state;\n    }\n}\n\n","import { combineReducers } from 'redux'\nimport { reducer as formReducer } from 'redux-form'\n\nimport authReducer from './authReducer'\nimport contentReducer from './contentReducer'\n\nexport default combineReducers({\n    auth: authReducer,\n    form: formReducer,\n    content: contentReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport reduxThunk from 'redux-thunk'\n\nimport App from './components/App'\nimport reducers from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n)\n"],"sourceRoot":""}