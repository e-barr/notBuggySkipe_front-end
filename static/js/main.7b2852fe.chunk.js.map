{"version":3,"sources":["containers/Header.js","containers/Content.js","containers/Layout.js","containers/LoginForm.js","containers/ProfileTile.js","containers/MeetingRoomsTile.js","containers/ContactsTile.js","containers/MeetingRoomDisplayTile.js","containers/MeetingRoom.js","containers/EditProfile.js","containers/ViewUsersTile.js","containers/InviteForm.js","containers/MainPage.js","containers/App.js","containers/About.js","containers/ContactUs.js","containers/SignUpForm.js","routes.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","id","className","Link","to","style","weight","Component","Content","props","children","Layout","containers_Header","containers_Content","LoginForm","_this$props","this","login","handleChange","onSubmit","type","placeholder","name","onChange","ProfileTile","_this$props$user","user","username","city","country","email","image_url","src","width","height","alt","onClick","editUser","logout","MeetingRoomsTile","_this","receivedInvites","length","map","invite","key","sender","room","onSelectRoom","deleteInvite","currentUserId","sentInvites","receiver","ContactsTile","viewUsers","contacts","removeContact","createInvite","contact","user_2","MeetingRoomDisplayTile","console","log","selectedRoom","meetingId","leaveMeeting","addMeetingId","MeetingRoom","title","concat","allow","EditProfile","state","event","setState","Object","defineProperty","target","value","_this2","closeEditProfile","profileChangesConfirmed","_this$state","ViewUsersTile","currentContacts","currentUser","initialfilteredUsers","allUsers","filter","currentContactsIds","finalListIds","includes","potentialContacts","addContact","InviteForm","content","room_name","closeInviteForm","receiverName","sendInvite","senderId","receiverId","MainPage","editingProfile","containers_EditProfile","containers_ProfileTile","containers_MeetingRoomsTile","sent_invites","received_invites","creatingInvite","containers_InviteForm","containers_ContactsTile","viewingUsers","containers_ViewUsersTile","containers_MeetingRoomDisplayTile","meeting_id","containers_MeetingRoom","meeting_room","ROOT_URL","App","password","loginError","sender_id","receiver_id","fetch","method","headers","Content-Type","Authorization","localStorage","token","body","JSON","stringify","then","resp","json","user_id","user_1_id","user_2_id","objectSpread","history","push","clear","preventDefault","_ref","alert","data","error","jwt","containers_MainPage","setSenderIdReceiverId","containers_LoginForm","About","href","ContactUs","SignUpForm","confirmPassword","onChangeInput","onSubmitSignUpForm","AppRoutes","containers_Layout","Switch","Route","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b2852fe.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nclass Header extends Component {\n    render() {\n            return (\n                <div id=\"header-wrapper\">\n                    <div id=\"header\" className=\"container\">\n                        <div id=\"logo\">\n                            <h1><Link to={'/login'}>NotBuggySkipe</Link></h1>\n                        </div>\n                    <div id=\"menu\">\n                        <ul>\n                            <li><Link to={'/login'} style={{weight: 'bold'}}>Login</Link></li>\n                            <li><Link to={'/signup'}>Signup</Link></li>\n                            <li><Link to={'/about'}>About</Link></li>\n                            <li><Link to={'/contact'}>Contact Us</Link></li>\n                            {/* {localStorage.token ? <li><Link to={'/login'} onClick={() => { \n                                localStorage.clear()\n                                this.props.history.push('/login')\n                            }}>Logout</Link></li> : null } */}\n                        </ul>\n                    </div>\n                    </div>\n                </div>\n            )\n    }\n}\n\nexport default Header","import React from 'react'\n\nconst Content = props => {\n    return (\n        <div>\n            {props.children}\n        </div>\n    )\n}\nexport default Content","import React from 'react'\nimport Header from './Header'\nimport Content from './Content'\n\nconst Layout = props => {\n    return (\n        <div>\n            <Header />\n            <Content>{props.children}</Content>\n        </div>\n    )\n}\n\nexport default Layout","import React, { Component } from 'react'\n\nclass LoginForm extends Component {\n    render() {\n        const { login, handleChange } = this.props\n        return (\n            <div className=\"login-form\">\n                <h2>Login</h2>\n                <form onSubmit={login}>\n                    <input type=\"text\" placeholder=\"username\" name=\"username\" onChange={handleChange} />\n                    <input type=\"password\" placeholder=\"password\" name=\"password\" onChange={handleChange} />\n                    <button className=\"button button-alt intro-button\">Login</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default LoginForm","import React, { Component } from 'react'\n\nclass ProfileTile extends Component {\n    render () {\n        const { username, city, country, email, image_url } = this.props.user\n        return (\n            <div className=\"profile-tile\">\n                <div>\n                    <h2><img src={image_url} width=\"10%\" height=\"10%\" alt=\"user profile\" />{username}</h2>\n                    <ul>{city}, {country}</ul>\n                    <ul>{email}</ul>\n                    <button className=\"button button-alt\" onClick={this.props.editUser}>Edit</button><button className=\"button button-alt\" onClick={this.props.logout}>Logout</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ProfileTile","import React, { Component } from 'react'\n\nclass MeetingRoomsTile extends Component {\n    render () {\n        return (\n            <div className=\"meeting-rooms-tile\">\n                INVITES\n                <div>\n                    <h4>Inbox</h4>\n                    {this.props.receivedInvites.length > 0 ? <div>{this.props.receivedInvites.map(invite => <p key={invite.id}>from: <strong>{invite.sender.username}</strong> location: <strong>{invite.room.name}</strong><button onClick={() => this.props.onSelectRoom(invite.room)} className=\"add\">ENTER</button><button onClick={() => this.props.deleteInvite(invite.id, this.props.currentUserId)} className=\"delete\">DELETE</button></p>)}...</div> : <div>You have not received any invites.</div>}\n                </div>\n                <div>\n                    <h4>Sent</h4>\n                    {this.props.sentInvites.length > 0 ? <div>{this.props.sentInvites.map(invite => <p key={invite.id}><strong>to: {invite.receiver.username}</strong> room: <strong>{invite.room.name}</strong><button onClick={() => this.props.onSelectRoom(invite.room)} className=\"add\">ENTER</button><button onClick={() => this.props.deleteInvite(invite.id, this.props.currentUserId)} className=\"delete\">DELETE</button></p>)}</div> : <div>You have not sent any invites.</div>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MeetingRoomsTile","import React, { Component } from 'react'\n\nclass ContactsTile extends Component {\n    render() {\n        const { viewUsers, contacts, removeContact, createInvite, currentUserId } = this.props\n        return (\n            <div className=\"contacts-tile\">\n                <p>ADDRESS BOOK</p>\n                <button onClick={viewUsers} className=\"view\">VIEW NEW CONTACTS</button>\n                { contacts.length > 0 ? <div>{contacts.map(contact => <li key={contact.id}>{contact.user_2.username}<button onClick={() => createInvite(currentUserId, contact.user_2.id, contact.user_2.username)} className=\"add\">SEND INVITE</button><button onClick={() => removeContact(contact.id)} className=\"delete\">DELETE</button></li>)}</div> : <p>You currently have no contacts.</p>}\n            </div>\n        )\n    }\n}\n\nexport default ContactsTile","import React, { Component } from 'react'\n\nclass MeetingRoomDisplayTile extends Component {\n    render() {\n        console.log(this.props)\n        return (\n            <div className=\"meeting-room-display-tile\">\n                <p>Room Name: {this.props.selectedRoom.name}</p>\n                {this.props.meetingId === this.props.selectedRoom.id ? <button onClick={this.props.leaveMeeting} className=\"delete\">LEAVE MEETING</button> : <button onClick={() => this.props.addMeetingId(this.props.selectedRoom.id)}className=\"add\">JOIN</button> }\n            </div>\n        )\n    }\n}\n\nexport default MeetingRoomDisplayTile","import React, { Component } from 'react'\n\nclass MeetingRoom extends Component {\n    render() {\n        if (this.props.room) {\n            return (\n                <div>\n                    <h3>\n                        {this.props.room.name}\n                    </h3>\n                   \n\n                    <p>\n                        <iframe title={this.props.room.name}\n                            src={`https://tokbox.com/embed/embed/ot-embed.js?embedId=cb6af7f6-5ac4-4691-9850-07636964bfb7&room=${this.props.room.name}&iframe=true`}\n                            width=\"80%\"\n                            height=\"720px\"\n                            allow=\"microphone; camera\"\n                            ></iframe>\n                        </p>\n    \n                </div>\n            )\n        } else {\n            return (\n                <div>Please join a meeting room before entering.</div>\n            )\n        }\n    }\n}\n\nexport default MeetingRoom","import React, { Component } from 'react'\n\nclass EditProfile extends Component {\n    state = {\n        email: this.props.user.email,\n        username: this.props.user.username,\n        city: this.props.user.city,\n        country: this.props.user.country,\n        image_url: this.props.user.image_url,\n        id: this.props.user.id\n    }\n\n    onChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    render() {\n        const { closeEditProfile, profileChangesConfirmed } = this.props\n        const { image_url, username, city, country, email } = this.state\n        return (\n            <div className=\"edit-profile-tile\">\n            <form onSubmit={() => profileChangesConfirmed(this.state)}>\n                <p>Image URL\n                    <input type=\"text\" name=\"image_url\" value={image_url} onChange={this.onChange} />\n                </p>\n                <p>Username<input type=\"text\" name=\"username\" value={username} onChange={this.onChange} /></p>\n                <p>City<input type=\"text\" name=\"city\" value={city} onChange={this.onChange} /></p>\n                <p>Country<input type=\"text\" name=\"country\" value={country} onChange={this.onChange} /></p>\n                <p>Email<input type=\"text\" name=\"email\" value={email} onChange={this.onChange} /></p>\n                <button>Confirm Changes</button>\n                <button onClick={closeEditProfile}>Cancel</button>\n\n            </form>\n            </div>\n        )\n    }\n}\n\nexport default EditProfile","import React, { Component } from 'react'\n\nclass ViewUsersTile extends Component {\n    render() {\n        const currentContacts = this.props.user.contacts.map(contact => contact.user_2)\n        const currentUser = this.props.user\n        const initialfilteredUsers = this.props.allUsers.filter(user => user.id !== currentUser.id)\n        const currentContactsIds = currentContacts.map(contact => contact.id)\n        const initialfilteredUsersIds = initialfilteredUsers.map(user => user.id)\n        const finalListIds = initialfilteredUsersIds.filter(id => currentContactsIds.includes(id) === false)\n        \n        const finalList = initialfilteredUsers.filter(user => finalListIds.includes(user.id))\n        const potentialContacts = finalList.map(user => { return <li key={user.id} >{user.username}<button onClick={() => this.props.addContact(currentUser.id, user.id)} className=\"add\">add</button></li>})\n\n        return(\n            <div>\n                USERS\n                <ul>{potentialContacts.length > 0 ? potentialContacts : <div>All current users are your contacts.</div>}</ul>\n            </div>\n        )\n    }\n}\n\nexport default ViewUsersTile","import React, { Component } from 'react'\n\nclass InviteForm extends Component {\n    state = {\n        content: '',\n        room_name: ''\n    }\n\n    onChange = event => {\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    render() {\n        const { closeInviteForm, receiverName, sendInvite, senderId, receiverId } = this.props\n        return(\n            <div className=\"invite-form-tile\">\n                <button onClick={closeInviteForm}>X</button>\n                INVITE TO: {receiverName}\n                <form>\n                    Room name: <input type=\"text\" name=\"room_name\" placeholder=\"required\" onChange={this.onChange} />\n                    Message:<input type=\"text\" name=\"content\" placeholder=\"optional\" onChange={this.onChange} />\n                    <button onClick={() => sendInvite(senderId, receiverId, this.state.content, this.state.room_name)}>SEND INVITE</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default InviteForm","import React, { Component } from 'react'\nimport ProfileTile from './ProfileTile'\nimport MeetingRoomsTile from './MeetingRoomsTile'\nimport ContactsTile from './ContactsTile'\nimport MeetingRoomDisplayTile from './MeetingRoomDisplayTile'\nimport MeetingRoom from './MeetingRoom'\nimport EditProfile from './EditProfile'\nimport ViewUsersTile from './ViewUsersTile'\nimport InviteForm from './InviteForm'\n\nclass MainPage extends Component {\n    state = {\n        selectedRoom: null\n    }\n\n    onSelectRoom = (room) => {\n        this.setState({\n            selectedRoom: room\n        })\n    }\n\n    render() {\n        if (this.props.currentUser) {\n            return (\n               <div>\n\n                    <div id=\"wrapper\">\n                        <div id=\"three-column\" className=\"container\">\n                            <div className=\"title\">\n                                {this.props.editingProfile ? <EditProfile profileChangesConfirmed={this.props.profileChangesConfirmed} user={this.props.currentUser} closeEditProfile={this.props.closeEditProfile} /> : <ProfileTile user={this.props.currentUser} editUser={this.props.editUser} logout={this.props.logout} />}\n                            </div>\n                            <div className=\"boxA\">\n                                <MeetingRoomsTile sentInvites={this.props.currentUser.sent_invites} receivedInvites={this.props.currentUser.received_invites} onSelectRoom={this.onSelectRoom} deleteInvite={this.props.deleteInvite} currentUserId={this.props.currentUser.id} />\n                            </div>\n                            <div className=\"boxB\">\n                                {this.props.creatingInvite ? <InviteForm closeInviteForm={this.props.closeInviteForm} senderId={this.props.senderId} receiverId={this.props.receiverId} sendInvite={this.props.sendInvite} receiverName={this.props.receiverName} /> : <ContactsTile contacts={this.props.currentUser.contacts} removeContact={this.props.removeContact} viewUsers={this.props.viewUsers} createInvite={this.props.createInvite} currentUserId={this.props.currentUser.id} />}\n                            </div>\n                            <div className=\"boxC\">\n                                {this.props.viewingUsers ? <ViewUsersTile allUsers={this.props.allUsers} user={this.props.currentUser} addContact={this.props.addContact} /> : null }\n                            </div>\n                        </div>\n                                <div id=\"welcome\">\n                                    {this.state.selectedRoom ? <MeetingRoomDisplayTile selectedRoom={this.state.selectedRoom} addMeetingId={this.props.addMeetingId} meetingId={this.props.currentUser.meeting_id} leaveMeeting={this.props.leaveMeeting} /> : <div>Please select a meeting room to see further details.</div>}\n                                    <div className=\"container\">\n                                        {this.props.currentUser && this.props.currentUser.meeting_id ? <MeetingRoom style={ {height:\"100px\"}} room={this.props.currentUser.meeting_room} /> : null }\n                                    </div>\n                                </div>\n                    </div>\n            </div>                \n            )\n        } else {\n            return (\n            <div>Hi</div>\n            )\n        }\n    }\n}\n\nexport default MainPage","import React, { Component } from 'react';\nimport './App.css';\nimport LoginForm from './LoginForm'\nimport MainPage from './MainPage'\n\nconst ROOT_URL = 'https://not-buggy-skipe.herokuapp.com'\n\nclass App extends Component {\n  state = {\n    username: '',\n    password: '',\n    currentUser: null,\n    loginError: null,\n    editingProfile: false,\n    viewingUsers: false,\n    allUsers: [],\n    creatingInvite: false,\n    senderId: null,\n    receiverId: null,\n    receiverName: null\n  }\n\n  sendInvite = (sender_id, receiver_id, content, room_name) => {\n    fetch(`${ROOT_URL}/api/v1/invites`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type' : 'application/json',\n        'Authorization' : `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        invite: {\n          sender_id,\n          receiver_id,\n          room_name,\n          content\n        }\n      })\n    })\n    .then(resp => resp.json())\n    .then(resp => this.setState({\n      currentUser: resp.user\n    }))\n\n    this.setState({\n      creatingInvite: false,\n      senderId: null,\n      receiverId: null\n    })\n  }\n\n  createInvite = (sender_id, receiver_id, receiverName) => {\n    this.setState({\n      creatingInvite: true,\n      senderId: sender_id,\n      receiverId: receiver_id,\n      receiverName\n    })\n  }\n\n  closeInviteForm = () => {\n    this.setState({\n      creatingInvite: false\n    })\n  }\n\n  deleteInvite = (id, user_id) => {\n    fetch(`${ROOT_URL}/api/v1/invites`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type' : 'application/json',\n        'Authorization' : `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        invite: { id, user_id }\n      })\n    })\n    .then(resp => resp.json())\n    .then(resp => this.setState({\n      currentUser: resp.user\n    }))\n    .then(resp => console.log(this.state.currentUser))\n  }\n\n  addContact = (user_1_id, user_2_id) => {\n    fetch(`${ROOT_URL}/api/v1/contacts`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type' : 'application/json',\n        'Authorization' : `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        contact: {\n          user_1_id,\n          user_2_id\n        }\n      })\n    })\n    .then(resp => resp.json())\n    .then(resp => this.setState({\n      currentUser: resp.user\n    }))\n    .then(resp => console.log(this.state.currentUser))\n  }\n\n  viewUsers = () => {\n    if (this.state.viewingUsers) {\n      this.setState({\n        viewingUsers: false\n      })\n    } else {\n\n      this.setState({\n        viewingUsers: true\n      })\n\n      fetch(`${ROOT_URL}/api/v1/users`, {\n        method: \"GET\",\n        headers: {\n          'Content-Type' : 'application/json',\n          'Authorization' : `Bearer ${localStorage.token}`\n        }\n      })\n      .then(resp => resp.json())\n      .then(resp => this.setState({\n        allUsers: resp\n      }))\n    }\n  }\n\n  removeContact = id => {\n      fetch(`${ROOT_URL}/api/v1/contacts`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type' : 'application/json',\n        'Authorization' : `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        contact: { id }\n      })\n    })\n    .then(resp => resp.json())\n    .then(resp => this.setState({\n      currentUser: resp.user\n    }))\n    .then(resp => console.log(this.state.currentUser))\n  }\n  \n  logout = event => {\n    const currentUser = {...this.state.currentUser }\n    \n    fetch(`${ROOT_URL}/api/v1/profile`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type' : 'application/json',\n        'Authorization' : `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        user: {...currentUser, meeting_id: null }\n      })\n    })\n\n    this.setState({\n      editingProfile: false\n    })\n    this.setState({\n      username: '',\n      password: '',\n      currentUser: null,\n      loginError: null,\n      editingProfile: false\n    })\n\n    this.props.history.push('/login')\n    localStorage.clear()\n  }\n\n  editUser = event => {\n    event.preventDefault()\n    this.setState({\n      editingProfile: true\n    })\n  }\n\n  closeEditProfile = () => {\n    this.setState({\n      editingProfile: false\n    })\n  }\n\n  profileChangesConfirmed = ({ email, username, city, country, image_url, id }) => {\n    const currentUser = {...this.state.currentUser, email, username, city, country, image_url }\n    \n    fetch(`${ROOT_URL}/api/v1/profile`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type' : 'application/json',\n        'Authorization' : `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify({\n        user: {...currentUser, id: currentUser.id }\n      })\n    })\n    .then(resp => resp.json())\n    .then(resp => this.setState({\n      currentUser: resp.user\n    }))\n    .then(resp => console.log(this.state.currentUser))\n\n    this.setState({\n      editingProfile: false\n    })\n  }\n\n  componentDidMount() {\n    const token = localStorage.token\n\n    fetch(`${ROOT_URL}/api/v1/profile`, {\n      method: \"GET\",\n      headers: {\n        'Authorization' : `Bearer ${token}`\n      }\n    })\n    .then(resp => resp.json())\n    .then(data => {\n      if (!data.error) {\n        this.setState({\n          currentUser: data.user\n        })\n      }\n    })\n  }\n\n  addMeetingId = meeting_id => {\n    if (this.state.currentUser.meeting_id) {\n      alert('You may only be in one meeting at a time. Please exit your current meeting before joining another one.')\n      return;\n    }\n    const currentUser = {...this.state.currentUser, meeting_id }\n    this.setState({ currentUser }, () => {\n        fetch(`${ROOT_URL}/api/v1/profile`, {\n        method: \"PATCH\",\n        headers: {\n          'Content-Type' : 'application/json',\n          'Authorization' : `Bearer ${localStorage.token}`\n        },\n        body: JSON.stringify({\n          user: { ...currentUser, id: currentUser.id }\n         })\n        }\n      )\n      .then(resp => resp.json())\n      .then(resp => this.setState({\n        currentUser: resp.user\n      }))\n      .then(resp => console.log(this.state.currentUser))\n\n    })\n  }\n\n\n  leaveMeeting = () => {\n    if (!this.state.currentUser.meeting_id) {\n      alert('You are currently not in a meeting. Please join a group to leave.')\n      return;\n    }\n\n    const currentUser = {...this.state.currentUser, meeting_id: null }\n    this.setState({ currentUser }, () => {\n        fetch(`${ROOT_URL}/api/v1/profile`, {\n        method: \"PATCH\",\n        headers: {\n          'Content-Type' : 'application/json',\n          'Authorization' : `Bearer ${localStorage.token}`\n        },\n        body: JSON.stringify({\n          user: { ...currentUser, id: currentUser.id }\n         })\n        }\n      )\n      .then(resp => resp.json())\n      .then(resp => this.setState({\n        currentUser: resp.user\n      }))\n      .then(console.log(`${this.state.currentUser.username} has left`, this.state.currentUser))\n\n    })\n  }\n\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value \n    })\n  }\n\n  login = event => {\n    event.preventDefault()\n\n    fetch(`${ROOT_URL}/api/v1/login`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        user: {\n          username: this.state.username,\n          password: this.state.password\n        }\n      }),\n      headers: {\n        'Content-Type' : 'application/json'\n      }\n    })\n      .then(resp => resp.json())\n      .then(data => {\n        if (!data.error) {\n          localStorage.token = data.jwt\n          this.setState({\n            currentUser: data.user\n          })\n        } else {\n          this.setState({\n            loginError: data.error\n          })\n        }\n      })\n  }\n\n  render() {\n    if (!this.state.currentUser) {\n      return (\n        <LoginForm login={this.login} handleChange={this.handleChange} />\n      )\n    } \n      return (\n        <div>\n            <MainPage currentUser={this.state.currentUser} logout={this.logout} addMeetingId={this.addMeetingId} leaveMeeting={this.leaveMeeting} editingProfile={this.state.editingProfile} closeEditProfile={this.closeEditProfile} editUser={this.editUser} profileChangesConfirmed={this.profileChangesConfirmed} removeContact={this.removeContact} viewUsers={this.viewUsers} allUsers={this.state.allUsers} viewingUsers={this.state.viewingUsers} addContact={this.addContact} deleteInvite={this.deleteInvite} creatingInvite={this.state.creatingInvite} createInvite={this.createInvite} closeInviteForm={this.closeInviteForm} setSenderIdReceiverId={this.setSenderIdReceiverId} senderId={this.state.senderId} receiverId={this.state.receiverId} sendInvite={this.sendInvite} receiverName={this.state.receiverName} />\n        </div>\n      );\n    \n  }\n}\n\nexport default App;\n","import React from 'react'\n\nconst About = props => {\n    return (\n        <div>\n            <div className=\"about-tile\">\n                <h4>This is a demo video chat app, created by <a href=\"https://github.com/e-barr\">e-barr</a></h4>\n            </div>\n        </div>\n    )\n}\nexport default About","import React from 'react'\n\nconst ContactUs = props => {\n    return (\n        <div className=\"contact-us-tile\">\n            <h4>If you have any questions, please feel free to contact me at <a href=\"https://github.com/e-barr\">e-barr</a></h4>\n        </div>\n    )\n}\n\nexport default ContactUs","import React, { Component } from 'react'\n\nconst ROOT_URL = 'https://not-buggy-skipe.herokuapp.com'\nclass SignUpForm extends Component {\n    state = {\n        email: '',\n        username: '',\n        password: '',\n        confirmPassword: '',\n        city: '',\n        country: '',\n        image_url: ''\n    }\n\n    onChangeInput = event => {\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    onSubmitSignUpForm = (event, state) => {\n        event.preventDefault()\n        if (state.password === state.confirmPassword) {\n            fetch(`${ROOT_URL}/api/v1/users`, {\n                method: \"POST\",\n                body: JSON.stringify({\n                    user: {\n                        email: state.email,\n                        username: state.username,\n                        password: state.password,\n                        city: state.city,\n                        country: state.country,\n                        image_url: state.image_url\n                    }\n                }),\n                headers: {\n                    'Content-Type' : 'application/json'\n                }\n            })\n            .then(resp => resp.json())\n            .then(data => {\n                if (!data.error) {\n                    alert('Your account has successfully been created! You will now be redirected to the login page.')\n                    this.props.history.push(\"/\")\n                } else {\n                    alert(data.error)\n                }\n            })\n        }\n    }\n    render() {\n        return (\n            <div className=\"signup-form\">\n                <h2>Sign Up</h2>\n                    <form onSubmit={(event) => this.onSubmitSignUpForm(event, this.state)}>\n                        <p>Email: <input type=\"text\" name=\"email\" onChange={this.onChangeInput}/></p>\n                        <p>Username: <input type=\"text\" name=\"username\" onChange={this.onChangeInput} /></p>\n                        <p>Password: <input type=\"password\" name=\"password\" onChange={this.onChangeInput} /></p>\n                        <p>Confirm password: <input type=\"password\" name=\"confirmPassword\" onChange={this.onChangeInput} /></p>\n                        <p>City: <input type=\"text\" name=\"city\" onChange={this.onChangeInput} /></p>\n                        <p>Country: <input type=\"text\" name=\"country\" onChange={this.onChangeInput} /></p>\n                        <p>Image URL: <input type=\"text\" name=\"image_url\" onChange={this.onChangeInput} /></p>\n        \n                        <button className=\"button button-alt intro-button\">Continue</button>\n                    </form>\n            </div>\n\n        )\n    }\n}\n\nexport default SignUpForm","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport Layout from './containers/Layout'\nimport App from './containers/App'\nimport About from './containers/About'\nimport ContactUs from './containers/ContactUs'\nimport SignUpForm from './containers/SignUpForm'\n\nconst AppRoutes = () => {\n    return (\n        <Layout>\n            <Switch>\n                <Route path=\"/\" component={App} exact />\n                <Route path=\"/signup\" component={SignUpForm} exact />\n                <Route path=\"/login\" component={App} exact />\n                <Route path=\"/about\" component={About} exact />\n                <Route path=\"/contact\" component={ContactUs} />\n            </Switch>\n        </Layout>\n    )\n}\n\nexport default AppRoutes","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRoutes from './routes.js';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router>\n        <AppRoutes />\n    </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n// serviceWorker.register();\n"],"sourceRoot":""}