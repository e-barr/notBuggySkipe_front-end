{"version":3,"sources":["apis/db.js","history.js","actions/index.js","actions/types.js","components/Header.js","components/ProfileTile.js","components/Utils.js","components/EditProfile.js","components/InvitesTile.js","components/ViewInvites.js","components/MeetingRoomTile.js","components/AddressBook.js","components/ViewAddressBook.js","components/SendInviteForm.js","components/ViewAddContacts.js","components/Content.js","components/LoginForm.js","components/About.js","components/ContactUs.js","components/SignUpForm.js","components/App.js","reducers/authReducer.js","reducers/contentReducer.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","createHistory","isEditingProfile","type","toggleShowInvites","toggleSendInviteForm","toggleAddContacts","Header","location","this","props","isSignedIn","react_default","a","createElement","Link","to","style","color","textShadow","className","onClick","logout","Component","connect","state","auth","history","push","localStorage","clear","ProfileTile","username","_this$props","city","country","image_url","src","alt","concat","renderField","_ref","input","label","meta","error","touched","Object","assign","placeholder","_ref2","renderError","EditProfile","onSubmit","formValues","currentUser","_this","submitProfileChanges","renderForm","email","handleSubmit","Field","name","component","value","formWrapped","reduxForm","form","validate","errors","initialValues","updatedValues","_ref6","asyncToGenerator","regenerator_default","mark","_callee4","dispatch","token","updatedUser","resp","payload","headersConfig","returnedFunc","wrap","_context4","prev","next","objectSpread","headers","Authorization","db","patch","user","Content-Type","sent","data","swal","t0","message","abrupt","stop","_x4","apply","arguments","invitesTileStyle","marginTop","marginBottom","marginLeft","InvitesTile","ViewInvites","renderInvite","inviteId","otherUser","room","key","id","textAlign","textOverflow","startMeeting","invite_id","deleteInvite","renderReceivedInvites","invites","map","invite","sender","renderSentInvites","receiver","_this$props$currentUs","received_invites","sent_invites","meeting_id","_ref8","_callee6","_context6","_x6","user_id","_ref7","_callee5","_context5","delete","_x5","MeetingRoomTile","meeting_room","paddingBottom","title","allow","scrolling","endMeeting","addressBookStyle","AddressBook","toggleViewAddressBook","addressCardStyle","fontSize","ViewAddressBook","getUniqueContacts","contacts","contact","user_2","contactIds","uniqueContactIds","forEach","contactId","includes","find","renderContacts","setInviteReceiver","deleteContact","marginRight","_ref9","_callee7","_context7","_x7","inviteReceiver","SendInviteForm","sender_id","receiver_id","content","room_name","roomName","sendInvite","_ref10","_ref11","_callee8","_context8","post","_x8","ViewAddContacts","getPossibleContacts","ownContacts","getOwnUniqueContacts","ownId","allUsers","ownContactsIds","filter","ids","uniqueIds","renderPossibleContacts","addContact","fetchAllUsers","_ref12","_callee9","_context9","get","_x9","user_1_id","user_2_id","_ref13","_callee10","resp2","payload2","_context10","t1","_x10","Content","_this$props$user","_this$props$content","isEditing","isViewingInvites","isStartingMeeting","isViewingAddressBook","isViewingSendInviteForm","isViewingAddContacts","src_components_MeetingRoomTile","components_EditProfile","components_ViewInvites","components_ViewAddressBook","components_SendInviteForm","components_ViewAddContacts","components_ProfileTile","components_InvitesTile","components_AddressBook","LoginForm","login","password","_callee","_context","jwt","length","_x","About","href","ContactUs","SignUpForm","signUp","confirmPassword","_ref4","_ref5","_callee3","_context3","_x3","App","getUserInfo","Router","components_Header","Switch","Route","path","exact","_ref3","_callee2","_context2","_x2","defaultState","loginError","jwtToken","isViewingAllUsers","enteredRoom","inviteMessage","inviteRoomName","combineReducers","undefined","action","formReducer","updatedDefault","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","src_components_App","document","querySelector"],"mappings":"oWAEeA,WAAMC,OAAO,CACxBC,QAAS,oECDEC,aCsJFC,EAAmB,WAC5B,MAAO,CACHC,KCtJ0B,oBD0JrBC,EAAoB,WAC7B,MAAO,CACHD,KC1J2B,wBDyQtBE,EAAuB,WAChC,MAAO,CACHF,KCtQ+B,4BD0U1BG,EAAoB,WAC7B,MAAO,CACHH,KCxU2B,wBCT7BI,mLAEE,IAAIC,EAEJ,OADwBA,EAAxBC,KAAKC,MAAMC,WAAwB,QAAqB,IAEpDC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAIR,GAAUI,EAAAC,EAAAC,cAAA,MAAIG,MAAO,CAAEC,MAAO,MAAOC,WAAY,oBAAvC,YACpBP,EAAAC,EAAAC,cAAA,OAAKM,UAAU,sBACLX,KAAKC,MAAMC,WAAaC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,QAAQI,UAAU,QAA3B,QAAgDR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,SAASI,UAAU,QAA5B,SAC1ER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,SAASI,UAAU,QAA5B,SACAR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,WAAWI,UAAU,QAA9B,WACAR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,cACXR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,QACTX,KAAKC,MAAMC,WACbC,EAAAC,EAAAC,cAAA,UACIO,QAASZ,KAAKC,MAAMY,OACpBF,UAAU,iBAFd,UAKYR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,UAAUI,UAAU,mBAA7B,sBAnBvBG,aAkCNC,cANS,SAACC,GACrB,MAAO,CACHd,WAAYc,EAAMC,KAAKf,aAIS,CAAEW,OFUpB,WAIlB,OAHAK,EAAQC,KAAK,KACbC,aAAaC,QAEN,CACH3B,KCrDc,YCsCPqB,CAAqCjB,GCJrCwB,mLAhCP,GAAItB,KAAKC,MAAMsB,SAAU,KAAAC,EAC0BxB,KAAKC,MAA5CsB,EADaC,EACbD,SAAUE,EADGD,EACHC,KAAMC,EADHF,EACGE,QAASC,EADZH,EACYG,UACjC,OACIxB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,QACXR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,SACXR,EAAAC,EAAAC,cAAA,OACAuB,IAAKD,EACLE,IAAG,GAAAC,OAAKP,MAGZpB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,WACPR,EAAAC,EAAAC,cAAA,UACIM,UAAU,+BACVC,QAASZ,KAAKC,MAAMR,kBAEpBU,EAAAC,EAAAC,cAAA,KAAGM,UAAU,eAErBR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,UACXR,EAAAC,EAAAC,cAAA,UAAKkB,IAETpB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,eACXR,EAAAC,EAAAC,cAAA,YAAAyB,OAAOL,EAAP,MAAAK,OAAgBJ,OAMhC,OAAO,YA7BOZ,+BCAbiB,EAAc,SAAAC,GAAkC,IAA/BC,EAA+BD,EAA/BC,MAAOC,EAAwBF,EAAxBE,MAAOC,EAAiBH,EAAjBG,KAAMzC,EAAWsC,EAAXtC,KAWxCiB,EAAS,SAAAmB,OAAYK,EAAKC,OAASD,EAAKE,QAAU,QAAU,IAElE,OACIlC,EAAAC,EAAAC,cAAA,OAAKM,UAAWA,GACZR,EAAAC,EAAAC,cAAA,aAAQ6B,GACR/B,EAAAC,EAAAC,cAAA,QAAAiC,OAAAC,OAAA,GAAWN,EAAX,CACAO,YAAaN,EACbxC,KAAMA,KACNS,EAAAC,EAAAC,cAAA,WAlBY,SAAAoC,GAAwB,IAArBL,EAAqBK,EAArBL,MAAOC,EAAcI,EAAdJ,QAC1B,GAAID,GAASC,EACT,OACIlC,EAAAC,EAAAC,cAAA,OAAKM,UAAU,YACXR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,UAAUyB,IAc3BM,CAAYP,MCbxBQ,6MACFC,SAAW,SAACC,GAAe,IACfC,EAAgBC,EAAK9C,MAArB6C,YACRC,EAAK9C,MAAM+C,qBAAqBF,EAAaD,MAGjDI,WAAa,SAAAjB,GAAmD,IAAhDkB,EAAgDlB,EAAhDkB,MAAO3B,EAAyCS,EAAzCT,SAAUE,EAA+BO,EAA/BP,KAAMC,EAAyBM,EAAzBN,QAASC,EAAgBK,EAAhBL,UAC5C,OACIxB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QACIM,UAAU,gBACViC,SAAUG,EAAK9C,MAAMkD,aAAaJ,EAAKH,WAGvCzC,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,KAAK,QACLnB,MAAM,QACNoB,UAAWvB,EACXwB,MAAOL,IAGX/C,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,KAAK,WACLnB,MAAM,WACNoB,UAAWvB,EACXwB,MAAOhC,IAGXpB,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,KAAK,OACLnB,MAAM,OACNoB,UAAWvB,EACXwB,MAAO9B,IAGXtB,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,KAAK,UACLnB,MAAM,UACNoB,UAAWvB,EACXwB,MAAO7B,IAGXvB,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,KAAK,YACLnB,MAAM,YACNoB,UAAWvB,EACXwB,MAAO5B,IAGXxB,EAAAC,EAAAC,cAAA,UACIM,UAAU,kBACVjB,KAAK,UAFT,UAQAS,EAAAC,EAAAC,cAAA,UACIM,UAAU,0BACVC,QAASmC,EAAK9C,MAAMR,kBAFxB,qFAaP,IACGqD,EAAgB9C,KAAKC,MAArB6C,YACJ,OACI3C,EAAAC,EAAAC,cAAA,OAAKM,UAAU,2CACXR,EAAAC,EAAAC,cAAA,qBACCL,KAAKiD,WAAWH,WA3EXhC,aA2GpB0C,EAAcC,YAAU,CAC1BC,KAAM,kBACNC,SA5Ba,SAAAlB,GAAmD,IAAhDS,EAAgDT,EAAhDS,MAAO3B,EAAyCkB,EAAzClB,SAAUE,EAA+BgB,EAA/BhB,KAAMC,EAAyBe,EAAzBf,QAASC,EAAgBc,EAAhBd,UAC1CiC,EAAS,GAsBf,OApBKV,IACDU,EAAOV,MAAQ,2BAGd3B,IACDqC,EAAOrC,SAAW,6BAGjBE,IACDmC,EAAOnC,KAAO,yBAGbC,IACDkC,EAAOlC,QAAU,4BAGhBC,IACDiC,EAAOjC,GAAa,gCAGjBiC,IAGSH,CAGjBd,GASY5B,cAPS,SAACC,GACrB,MAAO,CACH8B,YAAa9B,EAAMC,KAAK6B,YACxBe,cAAe7C,EAAMC,KAAK6B,cAIM,CAAEE,qBLdN,SAACF,EAAagB,GAAd,sBAAAC,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAA2B,EAAA7D,EAAA8D,KAAgC,SAAAC,EAAMC,GAAN,IAAAlB,EAAA3B,EAAAE,EAAAC,EAAAC,EAAA0C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAT,EAAA7D,EAAAuE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACxD5B,EAA8CY,EAA9CZ,MAAO3B,EAAuCuC,EAAvCvC,SAAUE,EAA6BqC,EAA7BrC,KAAMC,EAAuBoC,EAAvBpC,QAASC,EAAcmC,EAAdnC,UAClC0C,EAAQjD,aAAaiD,MACvBC,EAH4DhC,OAAAyC,EAAA,EAAAzC,CAAA,GAGzCQ,EAHyC,CAG5BI,QAAO3B,WAAUE,OAAMC,UAASC,cAChE4C,EAAO,GAELE,EAAgB,CAAEO,QAAS,CAC7BC,cAAA,UAAAnD,OAA4BuC,KAPgCO,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAW/CI,EAAGC,MAAM,kBAAmB,CACrCC,KAAK9C,OAAAyC,EAAA,EAAAzC,CAAA,GAAMgC,GACXU,QAAS,CACLK,eAAgB,qBAErBZ,GAhByD,OAW5DF,EAX4DK,EAAAU,KAiB5Dd,EAAUD,EAAKgB,KAAKH,KACpBI,IAAK,WAAY,8CAA+C,WAlBJZ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAoB5DL,EAAO,CAAEnC,MAAOwC,EAAAa,GAAMC,SACtBF,IAAK,yBAAD,GAAA1D,OAA8ByC,EAAKnC,OAAS,SArBY,eAwB5DsC,EAAe,SAACN,GAChBA,EAAS,CACL1E,KCtI0B,yBDuI1B8E,YAGJJ,EAAS,CACL1E,KC7IiB,gBD8IjB8E,aAhCwDI,EAAAe,OAAA,SAoCzDvB,EAASM,IApCgD,yBAAAE,EAAAgB,SAAAzB,EAAAnE,KAAA,aAAhC,gBAAA6F,GAAA,OAAA9B,EAAA+B,MAAA9F,KAAA+F,YAAA,IKc4BtG,oBAAjDsB,CAAqEyC,GC7H9EwC,EAAmB,CACrBC,UAAW,OACXC,aAAc,OACdC,WAAY,OACZ1F,MAAO,qBACPC,WAAY,oBAkBD0F,EAfK,SAACnG,GACjB,OACIE,EAAAC,EAAAC,cAAA,OACIM,UAAU,OACVC,QAASX,EAAMN,mBAEfQ,EAAAC,EAAAC,cAAA,OAAKM,UAAU,SACXR,EAAAC,EAAAC,cAAA,KAAGM,UAAU,gCACbH,MAAOwF,OCbjBK,6MACFC,aAAe,SAACC,EAAUC,EAAWC,GAAS,IAClC9E,EAAwB6E,EAAxB7E,UAAWJ,EAAaiF,EAAbjF,SAEnB,OACIpB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,SAAS+F,IAAKD,EAAKE,IAC9BxG,EAAAC,EAAAC,cAAA,OAAKM,UAAU,cACXR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,WACXR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIM,UAAU,0BACVR,EAAAC,EAAAC,cAAA,OACIM,UAAU,oBACViB,IAAKD,EACLE,IAAKN,IAERA,IAGTpB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,uBACXR,EAAAC,EAAAC,cAAA,KAAGG,MAAO,CAAEoG,UAAW,SAAUC,aAAc,SAAWJ,EAAKpD,OAE/DlD,EAAAC,EAAAC,cAAA,OAAKM,UAAU,kCACXR,EAAAC,EAAAC,cAAA,UACIM,UAAU,8BACVC,QAAS,kBAAMmC,EAAK9C,MAAM6G,aAAa/D,EAAK9C,MAAM6C,YAAa2D,EAAKE,MAFxE,SAIAxG,EAAAC,EAAAC,cAAA,UACIM,UAAU,gBACVoG,UAAWR,EACX3F,QAAS,kBAAMmC,EAAK9C,MAAM+G,aAAaT,EAAUxD,EAAK9C,MAAM6C,YAAY6D,MAH5E,iBAY5BM,sBAAwB,SAACC,GACrB,OACI/G,EAAAC,EAAAC,cAAA,OAAKM,UAAU,uBACVuG,EAAQC,IAAI,SAACC,GAAD,OAAYrE,EAAKuD,aAAac,EAAOT,GAAIS,EAAOC,OAAQD,EAAOX,YAKxFa,kBAAoB,SAACJ,GACjB,OACI/G,EAAAC,EAAAC,cAAA,OAAKM,UAAU,uBACVuG,EAAQC,IAAI,SAACC,GAAD,OAAYrE,EAAKuD,aAAac,EAAOT,GAAIS,EAAOG,SAAUH,EAAOX,kFAKjF,IAAAe,EACsCxH,KAAKC,MAAM6C,YAA9C2E,EADHD,EACGC,iBAAkBC,EADrBF,EACqBE,aAC1B,OACIvH,EAAAC,EAAAC,cAAA,OAAKM,UAAU,sCACfR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qBAAgBF,EAAAC,EAAAC,cAAA,WACZF,EAAAC,EAAAC,cAAA,OAAKM,UAAU,aACXR,EAAAC,EAAAC,cAAA,sBAEIF,EAAAC,EAAAC,cAAA,OAAKM,UAAU,6BACVX,KAAKiH,sBAAsBQ,IAEpCtH,EAAAC,EAAAC,cAAA,kBAAaF,EAAAC,EAAAC,cAAA,WACTF,EAAAC,EAAAC,cAAA,OAAKM,UAAU,6BACVX,KAAKsH,kBAAkBI,IAE5BvH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAEhBF,EAAAC,EAAAC,cAAA,UACIM,UAAU,0BACVC,QAASZ,KAAKC,MAAMN,mBAFxB,SAMAQ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,oBAhFcS,aA6FXC,cANS,SAACC,GACrB,MAAO,CACH8B,YAAa9B,EAAMC,KAAK6B,cAIQ,CAAEgE,aP8Fd,SAAChE,EAAa6E,GAAd,sBAAAC,EAAAtF,OAAA0B,EAAA,EAAA1B,CAAA2B,EAAA7D,EAAA8D,KAA6B,SAAA2D,EAAMzD,GAAN,IAAAE,EAAAC,EAAAC,EAAAH,EAAAI,EAAAC,EAAA,OAAAT,EAAA7D,EAAAuE,KAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cAC/CR,EAD+ChC,OAAAyC,EAAA,EAAAzC,CAAA,GAC5BQ,EAD4B,CACf6E,eAClCpD,EAAO,GAEPF,EAAQjD,aAAaiD,MAEnBI,EAAgB,CAAEO,QAAS,CAC7BC,cAAA,UAAAnD,OAA4BuC,KAPqByD,EAAAjD,KAAA,EAAAiD,EAAAhD,KAAA,EAWpCI,EAAGC,MAAM,kBAAmB,CACrCC,KAAMd,EACNU,QAAS,CACLK,eAAgB,qBAErBZ,GAhB8C,OAWjDF,EAXiDuD,EAAAxC,KAiBjDd,EAAUD,EAAKgB,KAAKH,KAjB6B0C,EAAAhD,KAAA,iBAAAgD,EAAAjD,KAAA,GAAAiD,EAAArC,GAAAqC,EAAA,SAmBjDvD,EAAO,CAAEnC,MAAO0F,EAAArC,GAAMC,SACtBF,IAAK,2BAAD,GAAA1D,OAAgCyC,EAAKnC,OAAS,SApBD,eAwBjDsC,EAAe,SAACN,GAChBA,EAAS,CACL1E,KCvNiB,gBDwNjB8E,YAGJJ,EAAS,CACL1E,KCxNiB,mBDyL4BoI,EAAAnC,OAAA,SAoC9CvB,EAASM,IApCqC,yBAAAoD,EAAAlC,SAAAiC,EAAA7H,KAAA,aAA7B,gBAAA+H,GAAA,OAAAH,EAAA9B,MAAA9F,KAAA+F,YAAA,IO9F4BpG,oBAAmBqH,aPkE/C,SAACL,EAAIqB,GAAL,sBAAAC,EAAA3F,OAAA0B,EAAA,EAAA1B,CAAA2B,EAAA7D,EAAA8D,KAAiB,SAAAgE,EAAM9D,GAAN,IAAAC,EAAAE,EAAAC,EAAA,OAAAP,EAAA7D,EAAAuE,KAAA,SAAAwD,GAAA,cAAAA,EAAAtD,KAAAsD,EAAArD,MAAA,cAEnCT,EAAQjD,aAAaiD,MACvBE,EAAO,GAH8B4D,EAAAtD,KAAA,EAAAsD,EAAArD,KAAA,EAOxBI,EAAGkD,OAAO,kBAAmB,CACtC7C,KAAM,CACF6B,OAAQ,CAAET,KAAIqB,YAElBhD,QAAS,CACLK,eAAgB,mBAChBJ,cAAA,UAAAnD,OAA4BuC,MAbC,OAOrCE,EAPqC4D,EAAA7C,KAgBrCd,EAAUD,EAAKgB,KAAKH,KAhBiB+C,EAAArD,KAAA,gBAAAqD,EAAAtD,KAAA,EAAAsD,EAAA1C,GAAA0C,EAAA,SAkBrC5D,EAAO,CAAEnC,MAAO+F,EAAA1C,GAAMC,SACtBF,IAAK,+BAAD,GAAA1D,OAAoCyC,EAAKnC,OAAS,SAnBjB,QAsBzCgC,EAAS,CACL1E,KCxLqB,gBDyLrB8E,YAxBqC,yBAAA2D,EAAAvC,SAAAsC,EAAAlI,KAAA,YAAjB,gBAAAqI,GAAA,OAAAJ,EAAAnC,MAAA9F,KAAA+F,YAAA,KOlEbhF,CAA4EsF,GC5FrFiC,2LAEE,IAAM7B,EAAOzG,KAAKC,MAAM6C,YAAYyF,aAEpC,OAAIvI,KAAKC,MAAM6C,aAAe2D,EAE1BtG,EAAAC,EAAAC,cAAA,OAAKM,UAAU,qCAAqCH,MAAO,CAAEgI,cAAe,OAExErI,EAAAC,EAAAC,cAAA,UAAKoG,EAAKpD,MACVlD,EAAAC,EAAAC,cAAA,OAAKM,UAAU,oBACXR,EAAAC,EAAAC,cAAA,UACAuB,IAAG,gGAAAE,OAAkG2E,EAAKpD,KAAvG,gBACHoF,MAAOhC,EAAKpD,KACZqF,MAAM,qBACNC,UAAU,QAIVxI,EAAAC,EAAAC,cAAA,UACAM,UAAU,8BACVH,MAAO,CAAEyF,UAAW,MACpBrF,QAASZ,KAAKC,MAAM2I,YAHpB,QAUD,YA5BW9H,cAsCfC,cALS,SAACC,GACrB,MAAO,CACH8B,YAAa9B,EAAMC,KAAK6B,cAGQ,CAAE8F,WR2LhB,WACtB,MAAO,CACHlJ,KCjOmB,iBOoCZqB,CAAyCuH,GC1ClDO,EAAmB,CACrB5C,UAAW,OACXC,aAAc,OACdC,WAAY,OACZ1F,MAAO,qBACPC,WAAY,oBAgBDoI,EAbK,SAAC7I,GACjB,OACIE,EAAAC,EAAAC,cAAA,OACIM,UAAU,OACVC,QAASX,EAAM8I,uBAEf5I,EAAAC,EAAAC,cAAA,OAAKM,UAAU,SACfR,EAAAC,EAAAC,cAAA,KAAGM,UAAU,oCAAoCH,MAAOqI,OCR9DG,EAAmB,CACrBC,SAAU,OACVhD,UAAW,QAGTiD,6MACFC,kBAAoB,WAChB,IAAMC,EAAWrG,EAAK9C,MAAMmF,KAAKgE,SAASjC,IAAI,SAAAkC,GAAO,OAAIA,EAAQC,SAC3DC,EAAaH,EAASjC,IAAI,SAAAkC,GAAO,OAAIA,EAAQ1C,KAE7C6C,EAAmB,GAMzB,OAJAD,EAAWE,QAAQ,SAAAC,GAAS,OAA6C,IAAzCF,EAAiBG,SAASD,GAAuBF,EAAiBrI,KAAKuI,GAAa,OAE7FF,EAAiBrC,IAAI,SAAAuC,GAAS,OAAIN,EAASQ,KAAK,SAAAP,GAAO,OAAIA,EAAQ1C,KAAO+C,SAKrGG,eAAiB,SAAAT,GACb,OAAOA,EAASjC,IAAI,SAAAkC,GAChB,IAAMjE,EAAOiE,EAAQC,OACb/H,EAAwB6D,EAAxB7D,SAAUI,EAAcyD,EAAdzD,UAClB,OACIxB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OAAO+F,IAAK2C,EAAQ1C,IAC/BxG,EAAAC,EAAAC,cAAA,OAAKM,UAAU,WACXR,EAAAC,EAAAC,cAAA,OACAM,UAAU,cACVH,MAAOwI,GAEFzH,GAELpB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,8BACfiB,IAAKD,EACLE,IAAKN,KAGTpB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,iBACXR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,kBACXR,EAAAC,EAAAC,cAAA,OACIM,UAAU,wBACVC,QAAS,WACLmC,EAAK9C,MAAM6J,kBAAkB1E,GAC7BrC,EAAK9C,MAAML,yBAJnB,eAUAO,EAAAC,EAAAC,cAAA,OACAM,UAAU,sBACVC,QAAS,kBAAMmC,EAAK9C,MAAM8J,cAAcV,EAAQ1C,MAFhD,wFAapB,IAAMyC,EAAWpJ,KAAKC,MAAMmJ,SAC5B,OACIjJ,EAAAC,EAAAC,cAAA,OAAKM,UAAU,sCACPR,EAAAC,EAAAC,cAAA,yBAAoBF,EAAAC,EAAAC,cAAA,UAChBM,UAAU,wCACVH,MAAO,CAAEyF,UAAW,QAAS+D,YAAa,OAC1CpJ,QAASZ,KAAKC,MAAMJ,mBAEpBM,EAAAC,EAAAC,cAAA,KAAGM,UAAU,eAErBR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,YACVX,KAAK6J,eAAeT,IAEzBjJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACIM,UAAU,0BACVC,QAASZ,KAAKC,MAAM8I,sBACpBvI,MAAO,CAAEyF,UAAW,UAHxB,iBAxEcnF,aA0FfC,cANS,SAACC,GACrB,MAAO,CACHoE,KAAMpE,EAAMC,KAAK6B,cAIe,CAAEiH,cV2Ib,SAACpD,GAAD,sBAAAsD,EAAA3H,OAAA0B,EAAA,EAAA1B,CAAA2B,EAAA7D,EAAA8D,KAAQ,SAAAgG,EAAM9F,GAAN,IAAAC,EAAAE,EAAAC,EAAA,OAAAP,EAAA7D,EAAAuE,KAAA,SAAAwF,GAAA,cAAAA,EAAAtF,KAAAsF,EAAArF,MAAA,cAE3BT,EAAQjD,aAAaiD,MACvBE,EAAO,GAHsB4F,EAAAtF,KAAA,EAAAsF,EAAArF,KAAA,EAOhBI,EAAGkD,OAAO,mBAAoB,CACvC7C,KAAM,CACF8D,QAAS,CAAE1C,OAEf3B,QAAS,CACLK,eAAgB,mBAChBJ,cAAA,UAAAnD,OAA4BuC,MAbP,OAO7BE,EAP6B4F,EAAA7E,KAgB7Bd,EAAUD,EAAKgB,KAAKH,KAhBS+E,EAAArF,KAAA,gBAAAqF,EAAAtF,KAAA,EAAAsF,EAAA1E,GAAA0E,EAAA,SAkB7B5F,EAAO,CAAEnC,MAAO+H,EAAA1E,GAAMC,SACtBF,IAAK,4BAAD,GAAA1D,OAAiCyC,EAAKnC,OAAS,SAnBtB,QAsBjCgC,EAAS,CACL1E,KCvQqB,gBDwQrB8E,YAxB6B,yBAAA2F,EAAAvE,SAAAsE,EAAAlK,KAAA,YAAR,gBAAAoK,GAAA,OAAAH,EAAAnE,MAAA9F,KAAA+F,YAAA,IU3I4B+D,kBVoLxB,SAACO,GAC9B,MAAO,CACH3K,KCjR2B,sBDkR3B8E,QAAS6F,IUvL2DxK,qBAA7DkB,CAAkFmI,GCjG3FoB,6MACF1H,SAAW,SAACC,GACR,IAAM0H,EAAYxH,EAAK9C,MAAMmF,KAAKuB,GAC5B6D,EAAczH,EAAK9C,MAAMwK,QAAQJ,eAAe1D,GAChD+D,EAAY7H,EAAW8H,SACvBF,EAAU5H,EAAW6C,SAAW,GAEtC3C,EAAK9C,MAAM2K,WAAW,CAAEL,YAAWC,cAAaE,YAAWD,eAI/DxH,WAAa,WACT,OACI9C,EAAAC,EAAAC,cAAA,QACIM,UAAU,gBACViC,SAAUG,EAAK9C,MAAMkD,aAAaJ,EAAKH,WAIvCzC,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,KAAK,WACLnB,MAAM,YACNoB,UAAWvB,EACXrC,KAAK,SAETS,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,KAAK,UACLnB,MAAM,sBACNoB,UAAWvB,EACXrC,KAAK,SAGTS,EAAAC,EAAAC,cAAA,UACIM,UAAU,kBACVjB,KAAK,UAFT,UAOAS,EAAAC,EAAAC,cAAA,UACQM,UAAU,0BACVC,QAASmC,EAAK9C,MAAML,sBAF5B,oFAUR,GAAII,KAAKC,MAAMmF,KAAM,CACjB,IAAMmC,EAAWvH,KAAKC,MAAMwK,QAAQJ,eACpC,OACIlK,EAAAC,EAAAC,cAAA,OAAKM,UAAU,0CACXR,EAAAC,EAAAC,cAAA,uBAAekH,EAAShG,UAEvBvB,KAAKiD,cAId,OAAO9C,EAAAC,EAAAC,cAAA,oCA3DUS,aAiFvB0C,GAAcC,YAAU,CAC1BC,KAAM,iBACNC,SAZa,SAAA3B,GAAkB,IACzB4B,EAAS,GAMf,OAP+B5B,EAAf2I,WAIZ/G,EAAO+G,SAAW,sCAGf/G,IAGSH,CAGjB6G,GAEYvJ,eAtBS,SAACC,GACrB,MAAO,CACHoE,KAAMpE,EAAMC,KAAK6B,YACjB2H,QAASzJ,EAAMyJ,UAmBiB,CAAE7K,uBAAsBgL,WX6MtC,SAAAC,GAAA,IAAGN,EAAHM,EAAGN,UAAWC,EAAdK,EAAcL,YAAaE,EAA3BG,EAA2BH,UAAWD,EAAtCI,EAAsCJ,QAAtC,sBAAAK,EAAAxI,OAAA0B,EAAA,EAAA1B,CAAA2B,EAAA7D,EAAA8D,KAAoD,SAAA6G,EAAM3G,GAAN,IAAAC,EAAAE,EAAAC,EAAAE,EAAA,OAAAT,EAAA7D,EAAAuE,KAAA,SAAAqG,GAAA,cAAAA,EAAAnG,KAAAmG,EAAAlG,MAAA,cACpET,EAAQjD,aAAaiD,MACvBE,EAAO,GAF+DyG,EAAAnG,KAAA,EAAAmG,EAAAlG,KAAA,EAMzDI,EAAG+F,KAAK,kBAAmB,CACpC7D,OAAQ,CACJmD,YACAC,cACAE,YACAD,YAEJ,CACIzF,QAAS,CACTK,eAAgB,mBAChBJ,cAAA,UAAAnD,OAA2BuC,MAhBmC,OAMtEE,EANsEyG,EAAA1F,KAoBtEE,IAAK,WAAY,iCAAkC,WApBmBwF,EAAAlG,KAAA,gBAAAkG,EAAAnG,KAAA,EAAAmG,EAAAvF,GAAAuF,EAAA,SAsBtEzG,EAAO,CAAEnC,MAAO4I,EAAAvF,GAAMC,SACtBF,IAAK,yBAA0B,kFAAmF,SAvB5C,eA0B1EhB,EAAUD,EAAKgB,KAAKH,KAEhBV,EAAe,SAACN,GAChBA,EAAS,CACL1E,KC7T2B,4BDgU/B0E,EAAS,CACL1E,KCzUiB,gBD0UjB8E,aAnCkEwG,EAAArF,OAAA,SAwCnEvB,EAASM,IAxC0D,yBAAAsG,EAAApF,SAAAmF,EAAA/K,KAAA,YAApD,gBAAAkL,GAAA,OAAAJ,EAAAhF,MAAA9F,KAAA+F,YAAA,KW7MXhF,CAA+DyC,ICxFxE2H,8MAKFC,oBAAsB,WAClB,IAAMC,EAActI,EAAKuI,uBACnBC,EAAQxI,EAAK9C,MAAMmF,KAAKuB,GACxB6E,EAAWzI,EAAK9C,MAAMuL,SACtBC,EAAiBJ,EAAYlE,IAAI,SAAAkC,GAAO,OAAIA,EAAQ1C,KAI1D,OAFyB6E,EAASE,OAAO,SAAAtG,GAAI,OAAyC,IAArCqG,EAAe9B,SAASvE,EAAKuB,KAAiBvB,EAAKuB,KAAO4E,OAK/GD,qBAAuB,WACnB,IAAMlC,EAAWrG,EAAK9C,MAAMmF,KAAKgE,SAASjC,IAAI,SAAAkC,GAAO,OAAIA,EAAQC,SAC7DqC,EAAMvC,EAASjC,IAAI,SAAAkC,GAAO,OAAIA,EAAQ1C,KAEtCiF,EAAY,GAMhB,OAJAD,EAAIlC,QAAQ,SAAA9C,GAAE,OAA+B,IAA3BiF,EAAUjC,SAAShD,GAAgBiF,EAAUzK,KAAKwF,GAAM,OAErDiF,EAAUzE,IAAI,SAAAR,GAAE,OAAIyC,EAASQ,KAAK,SAAAP,GAAO,OAAIA,EAAQ1C,KAAOA,SAKrFkF,uBAAyB,WACrB,IAAMzG,EAAOrC,EAAK9C,MAAMmF,KAExB,OAAKrC,EAAK9C,MAAMuL,SAMCzI,EAAKqI,sBACNjE,IAAI,SAAAkC,GAChB,OACIlJ,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OAAO+F,IAAK2C,EAAQ1C,IAC/BxG,EAAAC,EAAAC,cAAA,OAAKM,UAAU,yBACXR,EAAAC,EAAAC,cAAA,UACIM,UAAU,gCACVC,QAAS,kBAAMmC,EAAK9C,MAAM6L,WAAW1G,EAAKuB,GAAI0C,EAAQ1C,MAF1D,QAKJxG,EAAAC,EAAAC,cAAA,OACIM,UAAU,kBACViB,IAAKyH,EAAQ1H,UACbE,IAAKwH,EAAQ9H,WAEjBpB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,WACV0I,EAAQ9H,aApBjBpB,EAAAC,EAAAC,cAAA,OAAKM,UAAU,yHAhCvBX,KAAKC,MAAM8L,iDA4DX,OACI5L,EAAAC,EAAAC,cAAA,OAAKM,UAAU,sCACXR,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,OACIM,UAAU,kCAETX,KAAK6L,yBACN1L,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAEJF,EAAAC,EAAAC,cAAA,UACIM,UAAU,0BACVH,MAAO,CAAEyF,UAAW,SACpBrF,QAASZ,KAAKC,MAAMJ,mBAHxB,iBAzEciB,aA0FfC,eAPS,SAACC,GACrB,MAAO,CACHwK,SAAUxK,EAAMyJ,QAAQe,SACxBpG,KAAMpE,EAAMC,KAAK6B,cAIe,CAAEjD,oBAAmBkM,cZ4PhC,iCAAAC,EAAA1J,OAAA0B,EAAA,EAAA1B,CAAA2B,EAAA7D,EAAA8D,KAAM,SAAA+H,EAAM7H,GAAN,IAAAG,EAAAC,EAAAH,EAAA,OAAAJ,EAAA7D,EAAAuE,KAAA,SAAAuH,GAAA,cAAAA,EAAArH,KAAAqH,EAAApH,MAAA,cAC3BP,EAAO,GAELF,EAAQjD,aAAaiD,MAHI6H,EAAArH,KAAA,EAAAqH,EAAApH,KAAA,EAMdI,EAAGiH,IAAI,gBAAiB,CACjCnH,QAAS,CACLC,cAAA,UAAAnD,OAA4BuC,MART,OAM3BE,EAN2B2H,EAAA5G,KAAA4G,EAAApH,KAAA,gBAAAoH,EAAArH,KAAA,EAAAqH,EAAAzG,GAAAyG,EAAA,SAY3B3H,EAAO,CAAEnC,MAAO8J,EAAAzG,GAAMC,SACtBF,IAAK,yBAAD,GAAA1D,OAA8ByC,EAAKnC,OAAS,SAbrB,QAgB/BoC,EAAUD,EAAKgB,KAEfnB,EAAS,CACL1E,KC5VqB,gBD6VrB8E,YApB2B,yBAAA0H,EAAAtG,SAAAqG,EAAAjM,KAAA,YAAN,gBAAAoM,GAAA,OAAAJ,EAAAlG,MAAA9F,KAAA+F,YAAA,IY5P+C+F,WZoRlD,SAACO,EAAWC,GAAZ,sBAAAC,EAAAjK,OAAA0B,EAAA,EAAA1B,CAAA2B,EAAA7D,EAAA8D,KAA0B,SAAAsI,EAAMpI,GAAN,IAAAG,EAAAkI,EAAAjI,EAAAkI,EAAArI,EAAAK,EAAA,OAAAT,EAAA7D,EAAAuE,KAAA,SAAAgI,GAAA,cAAAA,EAAA9H,KAAA8H,EAAA7H,MAAA,cAC5CP,EAAO,GACPkI,EAAQ,GAGNpI,EAAQjD,aAAaiD,MALqBsI,EAAA9H,KAAA,EAAA8H,EAAA7H,KAAA,EAQ/BI,EAAG+F,KAAK,mBACjB,CACI5B,QAAS,CACLgD,YACAC,cAGR,CACItH,QAAS,CACLK,eAAgB,mBAChBJ,cAAA,UAAAnD,OAA4BuC,MAlBI,OAQ5CE,EAR4CoI,EAAArH,KAsB5CE,IAAK,WAAY,iCAAkC,WAtBPmH,EAAA7H,KAAA,iBAAA6H,EAAA9H,KAAA,GAAA8H,EAAAlH,GAAAkH,EAAA,SAwB5CpI,EAAO,CAAEnC,MAAOuK,EAAAlH,GAAMC,SACtBF,IAAK,yBAAD,GAAA1D,OAA8ByC,EAAKnC,OAAS,SAzBJ,eA2BhDoC,EAAUD,EAAKgB,KAAKH,KA3B4BuH,EAAA9H,KAAA,GAAA8H,EAAA7H,KAAA,GA8B9BI,EAAGiH,IAAI,gBAAiB,CAClCnH,QAAS,CACLC,cAAA,UAAAnD,OAA4BuC,MAhCQ,QA8B5CoI,EA9B4CE,EAAArH,KAmC5CoH,EAAWD,EAAMlH,KAnC2BoH,EAAA7H,KAAA,iBAAA6H,EAAA9H,KAAA,GAAA8H,EAAAC,GAAAD,EAAA,UAqC5CF,EAAQ,CAAErK,MAAOuK,EAAAC,GAAMlH,SACvBF,IAAK,yBAAD,GAAA1D,OAA8B2K,EAAMrK,OAAS,SAtCL,eAyC5CsC,EAAe,SAAAN,GACfA,EAAS,CACL1E,KC3ZiB,gBD4ZjB8E,YAGJJ,EAAS,CACL1E,KCjZiB,gBDkZjB8E,QAASkI,KAjD+BC,EAAAhH,OAAA,SAqDzCvB,EAASM,IArDgC,yBAAAiI,EAAA/G,SAAA4G,EAAAxM,KAAA,qBAA1B,gBAAA6M,GAAA,OAAAN,EAAAzG,MAAA9F,KAAA+F,YAAA,KYpRXhF,CAA4EoK,IC5ErF2B,oLAEE,GAAI9M,KAAKC,MAAMmF,KAAM,KAAA2H,EACwC/M,KAAKC,MAAMmF,KAA5D7D,EADSwL,EACTxL,SAAUE,EADDsL,EACCtL,KAAMC,EADPqL,EACOrL,QAASC,EADhBoL,EACgBpL,UAAWyH,EAD3B2D,EAC2B3D,SAD3B4D,EAE+GhN,KAAKC,MAAMwK,QAAnIwC,EAFSD,EAETC,UAAWC,EAFFF,EAEEE,iBAAkBC,EAFpBH,EAEoBG,kBAAmBC,EAFvCJ,EAEuCI,qBAAsBC,EAF7DL,EAE6DK,wBAAyBC,EAFtFN,EAEsFM,qBAEvG,OAAIH,EAEIhN,EAAAC,EAAAC,cAACkN,EAAD,MAEGN,EAEH9M,EAAAC,EAAAC,cAACmN,EAAD,MAEGN,EAEH/M,EAAAC,EAAAC,cAACoN,EAAD,CACIrI,KAAMpF,KAAKC,MAAMmF,OAGlBgI,EAEHjN,EAAAC,EAAAC,cAACqN,EAAD,CACI3E,sBAAuB/I,KAAKC,MAAM8I,sBAClCK,SAAUA,EACVxJ,qBAAsBI,KAAKC,MAAML,uBAGlCyN,EAEHlN,EAAAC,EAAAC,cAACsN,GAAD,MAEGL,EAEHnN,EAAAC,EAAAC,cAACuN,GAAD,MAIAzN,EAAAC,EAAAC,cAAA,OAAKM,UAAU,2CACXR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,4BACXR,EAAAC,EAAAC,cAACwN,EAAD,CACItM,SAAUA,EACVE,KAAMA,EACNC,QAASA,EACTC,UAAWA,EACXlC,iBAAkBO,KAAKC,MAAMR,mBAEjCU,EAAAC,EAAAC,cAACyN,EAAD,CACInO,kBAAmBK,KAAKC,MAAMN,oBAElCQ,EAAAC,EAAAC,cAAC0N,EAAD,CACIhF,sBAAuB/I,KAAKC,MAAM8I,0BAOtD,OAAO,YA1DGjI,aAsEPC,eAPS,SAACC,GACrB,MAAO,CACHoE,KAAMpE,EAAMC,KAAK6B,YACjB2H,QAASzJ,EAAMyJ,UAIiB,CAAEhL,mBAAkBE,oBAAmBoJ,sBboJ1C,WACjC,MAAO,CACHrJ,KCtOgC,6BYgF8DE,wBAAvFmB,CAA+G+L,ICjFxHkB,8MACFpL,SAAW,SAACC,GACRE,EAAK9C,MAAMgO,MAAMpL,MAGrBI,WAAa,WACT,OACI9C,EAAAC,EAAAC,cAAA,QAAMM,UAAU,gBAAgBiC,SAAUG,EAAK9C,MAAMkD,aAAaJ,EAAKH,WACnEzC,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,KAAK,WACLnB,MAAM,WACNoB,UAAWvB,EACXrC,KAAK,SAETS,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,KAAK,WACLnB,MAAM,WACNoB,UAAWvB,EACXrC,KAAK,aAETS,EAAAC,EAAAC,cAAA,UACIM,UAAU,kBACVjB,KAAK,UAFT,oFAWR,OACIS,EAAAC,EAAAC,cAAA,OAAKM,UAAU,2CACfR,EAAAC,EAAAC,cAAA,mBACKL,KAAKiD,qBAlCEnC,aAsDlB0C,GAAcC,YAAU,CAC1BC,KAAM,YACNC,SAhBa,SAACd,GACd,IAAMe,EAAS,GAUf,OARKf,EAAWtB,WACZqC,EAAOrC,SAAW,6BAGjBsB,EAAWqL,WACZtK,EAAOsK,SAAW,6BAGftK,IAGSH,CAGjBuK,IAEYjN,eAAQ,KAAM,CAAEkN,Md7CV,SAAAjM,GAAA,IAAGT,EAAHS,EAAGT,SAAU2M,EAAblM,EAAakM,SAAb,sBAAAzL,EAAAH,OAAA0B,EAAA,EAAA1B,CAAA2B,EAAA7D,EAAA8D,KAA4B,SAAAiK,EAAM/J,GAAN,IAAAG,EAAAC,EAAA,OAAAP,EAAA7D,EAAAuE,KAAA,SAAAyJ,GAAA,cAAAA,EAAAvJ,KAAAuJ,EAAAtJ,MAAA,cACzCP,EAAO,GADkC6J,EAAAvJ,KAAA,EAAAuJ,EAAAtJ,KAAA,EAG5BI,EAAG+F,KAAK,gBAAiB,CAClC7F,KAAM,CAAE7D,WAAU2M,YAClBlJ,QAAS,CACLK,eAAgB,sBANiB,OAGzCd,EAHyC6J,EAAA9I,KAAA8I,EAAAtJ,KAAA,gBAAAsJ,EAAAvJ,KAAA,EAAAuJ,EAAA3I,GAAA2I,EAAA,SAUzC7J,EAAO,CAAEnC,MAAOgM,EAAA3I,GAAMC,SACtBF,IAAK,sBAAuB,sDAAuD,SAX1C,UAcvChB,EAAUD,EAAKgB,MAERnD,OAASoC,EAAQ6J,IAAIC,OAAS,IACvClN,aAAaiD,MAAQG,EAAQ6J,KAGjCjK,EAAS,CACL1E,KC3Ca,QD4Cb8E,YAGJtD,EAAQC,KAAK,SAzBgC,yBAAAiN,EAAAxI,SAAAuI,EAAAnO,KAAA,YAA5B,gBAAAuO,GAAA,OAAA9L,EAAAqD,MAAA9F,KAAA+F,YAAA,Kc6CNhF,CAAyByC,ICrDzBgL,GAZD,WACV,OACIrO,EAAAC,EAAAC,cAAA,OAAKM,UAAU,mDACXR,EAAAC,EAAAC,cAAA,MAAIM,UAAU,aAAd,SACAR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,4DAAmDF,EAAAC,EAAAC,cAAA,KAAGoO,KAAK,6BAAR,UAAnD,KAEAtO,EAAAC,EAAAC,cAAA,8ECEDqO,GATG,WACd,OACIvO,EAAAC,EAAAC,cAAA,OAAKM,UAAU,2CACXR,EAAAC,EAAAC,cAAA,MAAIM,UAAU,aAAd,WACAR,EAAAC,EAAAC,cAAA,yEAAgEF,EAAAC,EAAAC,cAAA,KAAGoO,KAAK,6BAAR,UAAhE,+FAA0MtO,EAAAC,EAAAC,cAAA,KAAGoO,KAAK,qDAAR,qDAA1M,OCCNE,8MACF/L,SAAW,SAACC,GACRE,EAAK9C,MAAM2O,OAAO/L,MAGtBI,WAAa,WACT,OACI9C,EAAAC,EAAAC,cAAA,QACAM,UAAU,gBACViC,SAAUG,EAAK9C,MAAMkD,aAAaJ,EAAKH,WAEnCzC,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,KAAK,QACLnB,MAAM,QACNoB,UAAWvB,EACXrC,KAAK,SAETS,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,KAAK,WACLnB,MAAM,WACNoB,UAAWvB,EACXrC,KAAK,SAETS,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,KAAK,WACLnB,MAAM,WACNoB,UAAWvB,EACXrC,KAAK,aAETS,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,KAAK,kBACLnB,MAAM,mBACNoB,UAAWvB,EACXrC,KAAK,aAETS,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,KAAK,OACLnB,MAAM,OACNoB,UAAWvB,EACXrC,KAAK,SAETS,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,KAAK,UACLnB,MAAM,UACNoB,UAAWvB,EACXrC,KAAK,SAETS,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACIC,KAAK,YACLnB,MAAM,YACNoB,UAAWvB,EACXrC,KAAK,SAGTS,EAAAC,EAAAC,cAAA,UACIM,UAAU,YACVjB,KAAK,UAFT,oFAWR,OACIS,EAAAC,EAAAC,cAAA,OAAKM,UAAU,2CACXR,EAAAC,EAAAC,cAAA,qBACCL,KAAKiD,qBApEGnC,aA4GnB0C,GAAcC,YAAU,CAC1BC,KAAM,aACNC,SApCa,SAAA3B,GAA8E,IAA3EkB,EAA2ElB,EAA3EkB,MAAO3B,EAAoES,EAApET,SAAU2M,EAA0DlM,EAA1DkM,SAAUW,EAAgD7M,EAAhD6M,gBAAiBpN,EAA+BO,EAA/BP,KAAMC,EAAyBM,EAAzBN,QAASC,EAAgBK,EAAhBL,UACrEiC,EAAS,GA8Bf,OA5BKV,IACDU,EAAOV,MAAQ,2BAGd3B,IACDqC,EAAOrC,SAAW,6BAGjB2M,IACDtK,EAAOsK,SAAW,6BAGlBA,IAAaW,IACbjL,EAAOiL,gBAAkB,+BAGxBpN,IACDmC,EAAOnC,KAAO,yBAGbC,IACDkC,EAAOlC,QAAU,4BAGhBC,IACDiC,EAAOjC,GAAa,gCAGjBiC,IAGSH,CAGjBkL,IAEY5N,eAAQ,KAAM,CAAE6N,OjBpCT,SAAAE,GAAA,IAAG5L,EAAH4L,EAAG5L,MAAO3B,EAAVuN,EAAUvN,SAAU2M,EAApBY,EAAoBZ,SAAUW,EAA9BC,EAA8BD,gBAAiBpN,EAA/CqN,EAA+CrN,KAAMC,EAArDoN,EAAqDpN,QAASC,EAA9DmN,EAA8DnN,UAA9D,sBAAAoN,EAAAzM,OAAA0B,EAAA,EAAA1B,CAAA2B,EAAA7D,EAAA8D,KAA8E,SAAA8K,EAAM5K,GAAN,IAAAG,EAAAC,EAAA,OAAAP,EAAA7D,EAAAuE,KAAA,SAAAsK,GAAA,cAAAA,EAAApK,KAAAoK,EAAAnK,MAAA,UAE5FP,EAAO,GAGP2J,IAAaW,EAL+E,CAAAI,EAAAnK,KAAA,gBAAAmK,EAAApK,KAAA,EAAAoK,EAAAnK,KAAA,EAO3EI,EAAG+F,KAAK,gBAAiB,CAClC7F,KAAM,CAAElC,QAAO3B,WAAU2M,WAAUzM,OAAMC,UAASC,aAClDqD,QAAS,CACLK,eAAgB,sBAVgE,OAOxFd,EAPwF0K,EAAA3J,KAaxFd,EAAUD,EAAKgB,KACfnE,aAAaiD,MAAQG,EAAQ6J,IAC7B7I,IAAK,WAAY,2FAA4F,WAC7GtE,EAAQC,KAAK,SAhB2E8N,EAAAnK,KAAA,iBAAAmK,EAAApK,KAAA,GAAAoK,EAAAxJ,GAAAwJ,EAAA,SAkBxF1K,EAAO,CAAEnC,MAAO6M,EAAAxJ,GAAMC,SACtBF,IAAK,2BAAD,GAAA1D,OAAgCyC,EAAKnC,OAAS,SAnBsC,QAuBhGgC,EAAS,CACL1E,KC3Ge,UD4Gf8E,YAzB4F,yBAAAyK,EAAArJ,SAAAoJ,EAAAhP,KAAA,aAA9E,gBAAAkP,GAAA,OAAAH,EAAAjJ,MAAA9F,KAAA+F,YAAA,KiBoCPhF,CAA0ByC,IC1GnC2L,uMAEE/N,aAAaiD,OACfrE,KAAKC,MAAMmP,+CAKb,OACEjP,EAAAC,EAAAC,cAACgP,EAAA,EAAD,CAAQnO,QAASA,GACjBf,EAAAC,EAAAC,cAAA,OAAKM,UAAU,QACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,gBACXR,EAAAC,EAAAC,cAACiP,EAAD,MACAnP,EAAAC,EAAAC,cAACkP,EAAA,EAAD,KACEpP,EAAAC,EAAAC,cAACmP,EAAA,EAAD,CAAOC,KAAK,QAAQC,OAAK,EAACpM,UAAWwJ,KACrC3M,EAAAC,EAAAC,cAACmP,EAAA,EAAD,CAAOC,KAAK,SAASnM,UAAW0K,GAAW0B,OAAK,IAChDvP,EAAAC,EAAAC,cAACmP,EAAA,EAAD,CAAOC,KAAK,SAASnM,UAAWkL,GAAOkB,OAAK,IAC5CvP,EAAAC,EAAAC,cAACmP,EAAA,EAAD,CAAOC,KAAK,WAAWnM,UAAWoL,KAClCvO,EAAAC,EAAAC,cAACmP,EAAA,EAAD,CAAOC,KAAK,UAAUnM,UAAWqL,KACjCxO,EAAAC,EAAAC,cAACmP,EAAA,EAAD,CAAOC,KAAK,IAAInM,UAAWkL,gBAnBvB1N,cAkCHC,eANS,SAACC,GACvB,MAAO,CACLd,WAAYc,EAAMC,KAAKf,aAIa,CAAEkP,YlBWf,iCAAAO,EAAArN,OAAA0B,EAAA,EAAA1B,CAAA2B,EAAA7D,EAAA8D,KAAM,SAAA0L,EAAMxL,GAAN,IAAAC,EAAAE,EAAAC,EAAA,OAAAP,EAAA7D,EAAAuE,KAAA,SAAAkL,GAAA,cAAAA,EAAAhL,KAAAgL,EAAA/K,MAAA,cACvBT,EAAQjD,aAAaiD,MACvBE,EAAO,GAFkBsL,EAAAhL,KAAA,EAAAgL,EAAA/K,KAAA,EAKZI,EAAGiH,IAAI,kBAAmB,CACnCnH,QAAS,CACLC,cAAA,UAAAnD,OAA2BuC,MAPV,OAKzBE,EALyBsL,EAAAvK,KAAAuK,EAAA/K,KAAA,gBAAA+K,EAAAhL,KAAA,EAAAgL,EAAApK,GAAAoK,EAAA,SAWzBtL,EAAO,CAAEnC,MAAOyN,EAAApK,GAAMC,SACtBF,IAAK,sBAAuB,sDAAuD,SAZ1D,QAevBhB,EAAUD,EAAKgB,KAAKH,KAE1BhB,EAAS,CACL1E,KC1EqB,gBD2ErB8E,YAGJtD,EAAQC,KAAK,SAtBgB,yBAAA0O,EAAAjK,SAAAgK,EAAA5P,KAAA,YAAN,gBAAA8P,GAAA,OAAAH,EAAA7J,MAAA9F,KAAA+F,YAAA,KkBXZhF,CAA0CoO,cCzCnDY,GAAe,CACjB7P,YAAY,EACZ4C,YAAa,KACbkN,WAAY,KACZC,SAAU,MCERF,GAAe,CACjB9C,WAAW,EACXiD,mBAAmB,EACnB/C,mBAAmB,EACnBgD,aAAa,EACbjD,kBAAkB,EAClBE,sBAAsB,EACtBC,yBAAyB,EACzBC,sBAAsB,EACtBjD,eAAgB,KAChB+F,cAAe,GACfC,eAAgB,KAChB7E,SAAU,MCnBC8E,eAAgB,CAC3BrP,KFOW,WAAkC,IAAjCD,EAAiC+E,UAAAuI,OAAA,QAAAiC,IAAAxK,UAAA,GAAAA,UAAA,GAAzBgK,GAAcS,EAAWzK,UAAAuI,OAAA,EAAAvI,UAAA,QAAAwK,EAAAvO,EACzBwO,EAAOhM,SAAW,GAAhC6J,EADuCrM,EACvCqM,IAAKjJ,EADkCpD,EAClCoD,KAEX,OAAOoL,EAAO9Q,MACV,IlBlBa,QkBmBT,OAAO4C,OAAAyC,EAAA,EAAAzC,CAAA,GACAtB,EADP,CAEI8B,YAAasC,EACb6K,SAAU5B,EACVnO,YAAY,IAEpB,IlBvBc,SkBwBV,OAAOoC,OAAAyC,EAAA,EAAAzC,CAAA,GAAKyN,IAChB,IlB1Be,UkB2BX,OAAOzN,OAAAyC,EAAA,EAAAzC,CAAA,GACAtB,EADP,CAEI8B,YAAasC,EACb6K,SAAU5B,EACVnO,YAAY,IAEpB,IlB/BqB,gBkBgCjB,OAAOoC,OAAAyC,EAAA,EAAAzC,CAAA,GACAtB,EADP,CAEI8B,YAAa0N,EAAOhM,QACpByL,SAAU7O,aAAaiD,MACvBnE,YAAY,IAEpB,QACI,OAAOc,IElCf0C,KAAM+M,KACNhG,QDoBW,WAAkC,IAAjCzJ,EAAiC+E,UAAAuI,OAAA,QAAAiC,IAAAxK,UAAA,GAAAA,UAAA,GAAzBgK,GAAcS,EAAWzK,UAAAuI,OAAA,EAAAvI,UAAA,QAAAwK,EACrClG,EAAkDrJ,EAAlDqJ,eAAgB+F,EAAkCpP,EAAlCoP,cAAeC,EAAmBrP,EAAnBqP,eACjCK,EAAcpO,OAAAyC,EAAA,EAAAzC,CAAA,GACbtB,EADa,CAEhBqJ,iBACA+F,gBACAC,mBAGJ,OAAOG,EAAO9Q,MACV,InBnC0B,kBmBoCtB,IAAMuN,GAAajM,EAAMiM,UACzB,OAAO3K,OAAAyC,EAAA,EAAAzC,CAAA,GACAoO,EADP,CAEIzD,cAER,InBxC8B,yBmByC1B,OAAO3K,OAAAyC,EAAA,EAAAzC,CAAA,GACAyN,IAEX,InB3C2B,sBmB4CvB,IAAM7C,GAAoBlM,EAAMkM,iBAChC,OAAO5K,OAAAyC,EAAA,EAAAzC,CAAA,GACAoO,EADP,CAEIxD,qBAER,InBhDqB,gBmBiDjB,OAAO5K,OAAAyC,EAAA,EAAAzC,CAAA,GACAoO,EADP,CAEIvD,mBAAmB,IAE3B,InBpDmB,cmBqDf,OAAO7K,OAAAyC,EAAA,EAAAzC,CAAA,GACAoO,EADP,CAEIvD,mBAAmB,IAE3B,InBxDgC,2BmByD5B,IAAMC,GAAwBpM,EAAMoM,qBACpC,OAAO9K,OAAAyC,EAAA,EAAAzC,CAAA,GACAoO,EADP,CAEItD,yBAER,InB5D+B,0BmB6D3B,IAAMC,GAA2BrM,EAAMqM,wBACvC,OAAO/K,OAAAyC,EAAA,EAAAzC,CAAA,GACAyN,GADP,CAEI1C,0BACAhD,mBAER,InBjE2B,sBmBkEvB,OAAO/H,OAAAyC,EAAA,EAAAzC,CAAA,GACAoO,EADP,CAEIrG,eAAgBmG,EAAOhM,UAE/B,InBpE2B,sBmBqEvB,IAAM8I,GAAwBtM,EAAMsM,qBACpC,OAAOhL,OAAAyC,EAAA,EAAAzC,CAAA,GACAyN,GADP,CAEIzC,yBAER,InBvEqB,gBmBwEjB,IAAM9B,EAAWgF,EAAOhM,QACxB,OAAOlC,OAAAyC,EAAA,EAAAzC,CAAA,GACAtB,EADP,CAEIwK,aAER,QACI,OAAOxK,MEvFb2P,GAAmBC,OAAOC,sCAAwCC,IAClEC,GAAQC,YACVC,GACAN,GAAiBO,YAAgBC,OAGrCC,IAASC,OACLlR,EAAAC,EAAAC,cAACiR,EAAA,EAAD,CAAUP,MAAOA,IACb5Q,EAAAC,EAAAC,cAACkR,GAAD,OAEJC,SAASC,cAAc","file":"static/js/main.3f525030.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default axios.create({\n    baseURL: 'https://not-buggy-skipe.herokuapp.com'\n})","import createHistory from 'history/createBrowserHistory'\n\nexport default createHistory();","import { \n    LOGIN,\n    SIGN_UP,\n    LOGOUT,\n    GET_USER_INFO,\n    IS_EDITING_PROFILE,\n    SUBMIT_PROFILE_CHANGES,\n    TOGGLE_SHOW_INVITES,\n    START_MEETING,\n    END_MEETING,\n    TOGGLE_VIEW_ADDRESS_BOOK,\n    TOGGLE_SEND_INVITE_FORM,\n    SET_INVITE_INFO,\n    SET_INVITE_RECEIVER,\n    SET_INVITE_MESSAGE_AND_ROOM_NAME,\n    TOGGLE_ADD_CONTACTS,\n    SET_ALL_USERS\n} from './types'\nimport db from '../apis/db'\nimport swal from 'sweetalert'\nimport history from '../history'\n\nexport const login = ({ username, password }) => async dispatch => {\n    let resp = {}\n    try {\n        resp = await db.post('/api/v1/login', {\n            user: { username, password },\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n    } catch (error) {\n        resp = { error: error.message }\n        swal(\"Invalid credentials\", \"Invalid username and/or password. Please try again.\", \"error\")\n    }\n\n    const payload = resp.data\n\n    if (!payload.error && payload.jwt.length > 0) {\n        localStorage.token = payload.jwt\n    }\n\n    dispatch({\n        type: LOGIN,\n        payload\n    })\n\n    history.push(\"/main\")\n}\n\nexport const logout = () => {\n    history.push(\"/\")\n    localStorage.clear()\n\n    return {\n        type: LOGOUT\n    }\n}\n\nexport const getUserInfo = () => async dispatch => {\n    const token = localStorage.token\n    let resp = {}\n\n    try {\n        resp = await db.get('/api/v1/profile', {\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        })\n    } catch (error) {\n        resp = { error: error.message }\n        swal(\"Invalid credentials\", \"Invalid username and/or password. Please try again.\", \"error\")\n    }\n\n    const payload = resp.data.user\n\n    dispatch({\n        type: GET_USER_INFO,\n        payload\n    })\n\n    history.push(\"/main\")\n}\n\nexport const signUp = ({ email, username, password, confirmPassword, city, country, image_url }) => async dispatch => {\n    \n    let resp = {}\n    let payload\n\n    if (password === confirmPassword) {\n        try {\n            resp = await db.post('/api/v1/users', {\n                user: { email, username, password, city, country, image_url },\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            payload = resp.data\n            localStorage.token = payload.jwt\n            swal(\"Success!\", \"Your account has been successfully created. You will now be redirected to the main page.\", \"success\")\n            history.push(\"/main\")\n        } catch (error) {\n            resp = { error: error.message }\n            swal(\"Account creation failed.\", `${resp.error}`, \"error\")\n        }\n    }\n\n    dispatch({\n        type: SIGN_UP,\n        payload\n    })\n}\n\nexport const submitProfileChanges = (currentUser, updatedValues) => async dispatch => {\n    const { email, username, city, country, image_url } = updatedValues\n    const token = localStorage.token\n    let updatedUser = { ...currentUser, email, username, city, country, image_url }\n    let resp = {}\n    let payload;\n    const headersConfig = { headers: {\n        'Authorization' : `Bearer ${token}`\n    }}\n\n    try {\n        resp = await db.patch('/api/v1/profile', {\n            user: { ...updatedUser },\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }, headersConfig)\n        payload = resp.data.user\n        swal(\"Success!\", \"Your account has been successfully updated.\", \"success\")\n    } catch (error) {\n        resp = { error: error.message }\n        swal(\"Profile update failed.\", `${resp.error}`, \"error\")\n    }\n\n    let returnedFunc = (dispatch) => {\n        dispatch({\n            type: SUBMIT_PROFILE_CHANGES,\n            payload\n        })\n        \n        dispatch({\n            type: GET_USER_INFO,\n            payload\n        })\n    }\n\n    return dispatch(returnedFunc)\n}\n\nexport const isEditingProfile = () => {\n    return {\n        type: IS_EDITING_PROFILE\n    }\n}\n\nexport const toggleShowInvites = () => {\n    return {\n        type: TOGGLE_SHOW_INVITES\n    }\n}\n\nexport const deleteInvite = (id, user_id) => async dispatch => {\n    \n    const token = localStorage.token\n    let resp = {}\n    let payload\n\n    try {\n        resp = await db.delete('/api/v1/invites', {\n            data: {\n                invite: { id, user_id }\n            },\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : `Bearer ${token}`\n            },\n        })\n        payload = resp.data.user\n    } catch (error) {\n        resp = { error: error.message }\n        swal(\"Invitation failed to delete.\", `${resp.error}`, \"error\")\n    }\n\n    dispatch({\n        type: GET_USER_INFO,\n        payload\n    })\n}\n\nexport const startMeeting = (currentUser, meeting_id) => async dispatch => {\n    const updatedUser = { ...currentUser, meeting_id }\n    let resp = {}\n    let payload;\n    let token = localStorage.token\n\n    const headersConfig = { headers: {\n        'Authorization' : `Bearer ${token}`\n    }}\n\n    try {\n        resp = await db.patch('/api/v1/profile', {\n            user: updatedUser,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }, headersConfig)\n        payload = resp.data.user\n    } catch (error) {\n        resp = { error: error.message }\n        swal(\"Meeting entrance failed.\", `${resp.error}`, \"error\")\n    }\n\n\n    let returnedFunc = (dispatch) => {\n        dispatch({\n            type: GET_USER_INFO,\n            payload\n        })\n\n        dispatch({\n            type: START_MEETING\n        })\n\n    }\n\n    return dispatch(returnedFunc)\n}\n\nexport const endMeeting = () => {\n    return {\n        type: END_MEETING\n    }\n}\n\nexport const toggleViewAddressBook = () => {\n    return {\n        type: TOGGLE_VIEW_ADDRESS_BOOK\n    }\n}\n\nexport const deleteContact = (id) => async dispatch => {\n   \n    const token = localStorage.token\n    let resp = {}\n    let payload\n\n    try {\n        resp = await db.delete('/api/v1/contacts', {\n            data: {\n                contact: { id }\n            },\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization' : `Bearer ${token}`\n            },\n        })\n        payload = resp.data.user\n    } catch (error) {\n        resp = { error: error.message }\n        swal(\"Contact failed to delete.\", `${resp.error}`, \"error\")\n    }\n\n    dispatch({\n        type: GET_USER_INFO,\n        payload\n    })\n}\n\nexport const toggleSendInviteForm = () => {\n    return {\n        type: TOGGLE_SEND_INVITE_FORM\n    }\n}\n\nexport const setInviteInfo = (inviteReceiver, inviteMessage, inviteRoomName) => {\n    return {\n        type: SET_INVITE_INFO,\n        payload: { inviteReceiver, inviteMessage, inviteRoomName }\n    }\n}\n\nexport const setInviteReceiver = (inviteReceiver) => {\n    return {\n        type: SET_INVITE_RECEIVER,\n        payload: inviteReceiver\n    }\n}\n\nexport const setInviteMessageAndRoomName = (inviteMessage, roomName) => {\n    return {\n        type: SET_INVITE_MESSAGE_AND_ROOM_NAME,\n        payload: { inviteMessage, roomName }\n    }\n}\n\nexport const sendInvite = ({ sender_id, receiver_id, room_name, content }) => async dispatch => {\n    const token = localStorage.token\n    let resp = {}\n    let payload\n\n    try {\n        resp = await db.post('/api/v1/invites', {\n            invite: {\n                sender_id,\n                receiver_id,\n                room_name,\n                content\n            }},\n            { \n                headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n                }\n            }\n        )\n        swal(\"Success!\", \"Your invitation has been sent.\", \"success\")\n    } catch (error) {\n        resp = { error: error.message }\n        swal(\"Invite creation failed\", \"Please be sure that your room name is unique. Note that no message is required.\", \"error\")\n    }\n\n    payload = resp.data.user\n\n    let returnedFunc = (dispatch) => {\n        dispatch({\n            type: TOGGLE_SEND_INVITE_FORM\n        })\n\n        dispatch({\n            type: GET_USER_INFO,\n            payload\n        })\n\n    }\n\n    return dispatch(returnedFunc)\n}\n\nexport const toggleAddContacts = () => {\n    return {\n        type: TOGGLE_ADD_CONTACTS\n    }\n}\n\nexport const fetchAllUsers = () => async dispatch => {\n    let resp = {}\n    let payload\n    const token = localStorage.token\n\n    try {\n        resp = await db.get('/api/v1/users', {\n            headers: {\n                'Authorization' : `Bearer ${token}`\n            }\n        })\n    } catch (error) {\n        resp = { error: error.message }\n        swal(\"Fetch all users failed\", `${resp.error}`, \"error\")\n    }\n\n    payload = resp.data\n\n    dispatch({\n        type: SET_ALL_USERS,\n        payload\n    })\n}\n\nexport const addContact = (user_1_id, user_2_id) => async dispatch => {\n    let resp = {}\n    let resp2 = {}\n    let payload\n    let payload2\n    const token = localStorage.token\n\n    try {\n        resp = await db.post('/api/v1/contacts',\n            {\n                contact: {\n                    user_1_id,\n                    user_2_id\n                }\n            },\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization' : `Bearer ${token}`\n                }\n            }\n        )\n        swal(\"Success!\", \"Your have added a new contact.\", \"success\")\n    } catch (error) {\n        resp = { error: error.message }\n        swal(\"Failed to add contact.\", `${resp.error}`, \"error\")\n    }\n    payload = resp.data.user\n\n    try {\n        resp2 = await db.get('/api/v1/users', {\n            headers: {\n                'Authorization' : `Bearer ${token}`\n            }\n        })\n        payload2 = resp2.data\n    } catch (error) {\n        resp2 = { error: error.message }\n        swal(\"Fetch all users failed\", `${resp2.error}`, \"error\")\n    }\n\n    let returnedFunc = dispatch => {\n        dispatch({\n            type: GET_USER_INFO,\n            payload\n        })\n\n        dispatch({\n            type: SET_ALL_USERS,\n            payload: payload2\n        })\n    }\n\n    return dispatch(returnedFunc)\n}","export const LOGIN = 'LOGIN'\nexport const SIGN_UP = 'SIGN_UP'\nexport const LOGOUT = 'LOGOUT'\nexport const GET_USER_INFO = 'GET_USER_INFO'\nexport const IS_EDITING_PROFILE = 'IS_EDIT_PROFILE'\nexport const SUBMIT_PROFILE_CHANGES = 'SUBMIT_PROFILE_CHANGES'\nexport const TOGGLE_SHOW_INVITES = 'TOGGLE_SHOW_INVITES'\nexport const START_MEETING = 'START_MEETING'\nexport const END_MEETING = 'END_MEETING'\nexport const TOGGLE_VIEW_ADDRESS_BOOK = 'TOGGLE_VIEW_ADDRESS_BOOK'\nexport const DELETE_CONTACT = 'DELETE_CONTACT'\nexport const TOGGLE_SEND_INVITE_FORM = 'TOGGLE_SEND_INVITE_FORM'\nexport const SET_INVITE_INFO = 'SET_INVITE_INFO'\nexport const SET_INVITE_RECEIVER = 'SET_INVITE_RECEIVER'\nexport const SET_INVITE_MESSAGE_AND_ROOM_NAME = 'SET_INVITE_MESSAGE_AND_ROOM_NAME'\nexport const TOGGLE_ADD_CONTACTS = 'TOGGLE_ADD_CONTACTS'\nexport const CREATE_CONTACT = 'CREATE_CONTACT'\nexport const FETCH_ALL_USERS = 'FETCH_ALL_USERS'\nexport const SET_ALL_USERS = 'SET_ALL_USERS'\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { logout } from '../actions'\n\nclass Header extends Component {\n    render() {\n        let location\n        this.props.isSignedIn ? location = \"/main\" : location = \"/\"\n        return (\n            <div>\n                <Link to={location}><h1 style={{ color: 'red', textShadow: '#CCC 1px 0 10px'}}>TwoChat</h1></Link>\n                <div className=\"ui borderless menu\">    \n                        { this.props.isSignedIn ? <Link to=\"/main\" className=\"item\">Home</Link> : <Link to=\"/login\" className=\"item\">Login</Link>}\n                        <Link to=\"/about\" className=\"item\">About</Link>\n                        <Link to=\"/contact\" className=\"item\">Contact</Link>\n                        <div className=\"right menu\">\n                            <div className=\"item\">\n                                { this.props.isSignedIn ? \n                                <button \n                                    onClick={this.props.logout}\n                                    className=\"ui red button\"\n                                >\n                                    Logout\n                                </button> : <Link to=\"/signup\" className=\"ui green button\">Sign Up</Link> }\n                            </div>\n                        </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isSignedIn: state.auth.isSignedIn\n    }\n}\n\nexport default connect(mapStateToProps, { logout })(Header);","import React, { Component } from 'react'\n\nclass ProfileTile extends Component {\n    render() {\n        if (this.props.username) {\n            const { username, city, country, image_url } = this.props\n            return (\n                <div className=\"card\">\n                    <div className=\"image\">\n                        <img \n                        src={image_url}\n                        alt={`${username}`}\n                        />\n                    </div>\n                    <div className=\"content\">\n                            <button \n                                className=\"ui right floated icon button\"\n                                onClick={this.props.isEditingProfile}\n                            >\n                                <i className=\"edit icon\"></i>\n                            </button>\n                        <div className=\"header\">\n                            <h2>{username}</h2>\n                        </div>\n                        <div className=\"description\">\n                            <p>{`${city}, ${country}`}</p>\n                        </div>\n                    </div>\n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n}\n\nexport default ProfileTile;","import React from 'react'\n\nexport const renderField = ({ input, label, meta, type }) => {\n    const renderError = ({ error, touched }) => {\n        if (error && touched) {\n            return (\n                <div className=\"ui error\">\n                    <div className=\"header\">{error}</div>\n                </div>\n            )\n        }\n    }\n\n    const className = `field ${meta.error && meta.touched ? 'error' : ''}`\n\n    return (\n        <div className={className}>\n            <label>{label}</label>\n            <input {...input} \n            placeholder={label}\n            type={type} />\n            <div>{renderError(meta)}</div>\n        </div>\n    )\n}\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\n\nimport { renderField } from './Utils'\nimport { submitProfileChanges, isEditingProfile } from '../actions'\n\n\nclass EditProfile extends Component {\n    onSubmit = (formValues) => {\n        const { currentUser } = this.props\n        this.props.submitProfileChanges(currentUser, formValues)\n    }\n\n    renderForm = ({ email, username, city, country, image_url }) => {\n        return(\n            <div>\n                <form\n                    className=\"ui form error\"\n                    onSubmit={this.props.handleSubmit(this.onSubmit)}\n                >\n\n                    <Field\n                        name=\"email\"\n                        label=\"email\"\n                        component={renderField}\n                        value={email}\n                    />\n\n                    <Field \n                        name=\"username\"\n                        label=\"username\"\n                        component={renderField}\n                        value={username}\n                    />\n\n                    <Field \n                        name=\"city\"\n                        label=\"city\"\n                        component={renderField}\n                        value={city}\n                    />\n\n                    <Field \n                        name=\"country\"\n                        label=\"country\"\n                        component={renderField}\n                        value={country}\n                    />\n\n                    <Field\n                        name=\"image_url\"\n                        label=\"image url\"\n                        component={renderField}\n                        value={image_url}\n                    />\n\n                    <button\n                        className=\"ui green button\"\n                        type=\"submit\"\n                    >\n                        Submit\n                    </button>\n\n\n                    <button\n                        className=\"ui right floated button\"\n                        onClick={this.props.isEditingProfile}\n                    >\n                        Cancel\n\n                    </button>\n                </form>\n\n            </div>\n        )\n    }\n\n    render() {\n        const { currentUser } = this.props\n            return(\n                <div className=\"ui raised padded text container segment\">\n                    <h1>Profile</h1>\n                    {this.renderForm(currentUser)}\n                </div>\n            )\n        }\n}\n\nconst validate = ({ email, username, city, country, image_url }) => {\n    const errors = {}\n\n    if (!email) {\n        errors.email = 'You must enter an email'\n    }\n\n    if (!username) {\n        errors.username = 'You must enter a username'\n    }\n\n    if (!city) {\n        errors.city = 'You must enter a city'\n    }\n\n    if (!country) {\n        errors.country = 'You must enter a country'\n    }\n\n    if (!image_url) {\n        errors[image_url] = 'You must enter an image url.'\n    }\n\n    return errors\n}\n\nconst formWrapped = reduxForm({\n    form: 'editProfileForm',\n    validate\n})(EditProfile);\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.auth.currentUser,\n        initialValues: state.auth.currentUser\n    }\n}\n\nexport default connect(mapStateToProps, { submitProfileChanges, isEditingProfile })(formWrapped);","import React from 'react'\n\nconst invitesTileStyle = {\n    marginTop: '90px',\n    marginBottom: '80px',\n    marginLeft: '20px',\n    color: 'rgb(245, 194, 194)',\n    textShadow: '2px 2px 4px grey'\n}\n\nconst InvitesTile = (props) => {\n    return(\n        <div\n            className=\"card\"\n            onClick={props.toggleShowInvites}\n        >\n            <div className=\"image\">\n                <i className=\"massive envelope outline icon\"\n                style={invitesTileStyle}\n                ></i>\n            </div>\n        </div>\n    )\n}\n\nexport default InvitesTile;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { toggleShowInvites, deleteInvite, startMeeting } from '../actions'\n\nclass ViewInvites extends Component {\n    renderInvite = (inviteId, otherUser, room) => {\n        const { image_url, username } = otherUser\n\n        return (\n            <div className=\"column\" key={room.id}>\n                <div className=\"ui segment\">\n                    <div className=\"content\" >\n                        <div>\n                            <h2 className=\"ui top attached header\">\n                                <img \n                                    className=\"ui circular image\"\n                                    src={image_url}\n                                    alt={username}\n                                />\n                                {username}\n                            </h2>\n                        </div>\n                        <div className=\"ui attached segment\" >\n                            <p style={{ textAlign: 'center', textOverflow: 'clip' }}>{room.name}</p>\n                        </div>\n                            <div className=\"ui two bottom attached buttons\">\n                                <button \n                                    className=\"ui float right green button\"\n                                    onClick={() => this.props.startMeeting(this.props.currentUser, room.id)}\n                                    >Start</button>\n                                <button\n                                    className=\"ui red button\"\n                                    invite_id={inviteId}\n                                    onClick={() => this.props.deleteInvite(inviteId, this.props.currentUser.id)}\n                                >Cancel</button>\n                            </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    renderReceivedInvites = (invites) => {\n        return (\n            <div className=\"ui four column grid\">\n                {invites.map((invite) => this.renderInvite(invite.id, invite.sender, invite.room))}\n            </div>\n        )\n    }\n\n    renderSentInvites = (invites) => {\n        return (\n            <div className=\"ui four column grid\">\n                {invites.map((invite) => this.renderInvite(invite.id, invite.receiver, invite.room))}\n            </div>\n        )\n    }\n\n    render() {\n        const { received_invites, sent_invites } = this.props.currentUser\n        return (\n            <div className=\"ui raised padded container segment\">\n            <div>\n                <h1>Invites</h1><br></br>\n                    <div className=\"container\">\n                        <h4>RECEIVED</h4>\n                    \n                            <div className=\"ui stackable divided grid\">\n                                {this.renderReceivedInvites(received_invites)}\n                            </div>\n                        <h4>SENT</h4><br></br>\n                            <div className=\"ui stackable divided grid\">\n                                {this.renderSentInvites(sent_invites)}\n                            </div>\n                            <br></br>\n                            <br></br>\n                    </div>\n            <button\n                className=\"ui right floated button\"\n                onClick={this.props.toggleShowInvites}\n                >\n                Close\n            </button>\n            <br></br>\n            <br></br>\n            </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.auth.currentUser\n    }\n}\n\nexport default connect(mapStateToProps, { startMeeting, toggleShowInvites, deleteInvite })(ViewInvites);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { endMeeting } from '../actions'\nimport './MeetingRoomTile.css'\n\nclass MeetingRoomTile extends Component {\n    render() {\n        const room = this.props.currentUser.meeting_room\n\n        if (this.props.currentUser && room) {\n        return (\n            <div className=\"ui raised padded container segment\" style={{ paddingBottom: '9%' }}>\n\n                <h2>{room.name}</h2>\n                <div className=\"iframe-container\">\n                    <iframe\n                    src={`https://tokbox.com/embed/embed/ot-embed.js?embedId=cb6af7f6-5ac4-4691-9850-07636964bfb7&room=${room.name}&iframe=true`}\n                    title={room.name}\n                    allow=\"microphone; camera\"\n                    scrolling=\"no\"\n                    ></iframe>\n\n                    </div>\n                    <button\n                    className=\"ui right floated red button\"\n                    style={{ marginTop: '2%' }}\n                    onClick={this.props.endMeeting}\n                    >\n                    End\n                    </button>\n\n                    </div>\n        )} else {\n            return null\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.auth.currentUser\n    }\n}\nexport default connect(mapStateToProps, { endMeeting })(MeetingRoomTile);","import React from 'react'\n\nconst addressBookStyle = {\n    marginTop: '90px',\n    marginBottom: '80px',\n    marginLeft: '20px',\n    color: 'rgb(245, 194, 194)',\n    textShadow: '2px 2px 4px grey'\n}\n\nconst AddressBook = (props) => {\n    return (\n        <div\n            className=\"card\"\n            onClick={props.toggleViewAddressBook}\n        >\n            <div className=\"image\">\n            <i className=\"massive address book outline icon\" style={addressBookStyle}></i>\n            </div>\n        </div>\n    )\n}\n\nexport default AddressBook;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n    deleteContact,\n    setInviteReceiver,\n    toggleAddContacts\n} from '../actions'\n\nconst addressCardStyle = {\n    fontSize: '36px',\n    marginTop: '30px'\n}\n\nclass ViewAddressBook extends Component {\n    getUniqueContacts = () => {\n        const contacts = this.props.user.contacts.map(contact => contact.user_2)\n        const contactIds = contacts.map(contact => contact.id)\n\n        const uniqueContactIds = []\n\n        contactIds.forEach(contactId => uniqueContactIds.includes(contactId) === false ? uniqueContactIds.push(contactId) : null)\n\n        const uniqueContacts = uniqueContactIds.map(contactId => contacts.find(contact => contact.id === contactId))\n\n        return uniqueContacts\n    }\n\n    renderContacts = contacts => {\n        return contacts.map(contact => {\n            const user = contact.user_2\n            const { username, image_url } = user\n            return (\n                <div className=\"card\" key={contact.id}>\n                    <div className=\"content\">\n                        <div\n                        className=\"description\"\n                        style={addressCardStyle}\n                        >\n                            {username}\n                        </div>\n                        <img className=\"ui floated right tiny image\"\n                        src={image_url}\n                        alt={username}\n                        />\n                    </div>\n                    <div className=\"extra content\">\n                        <div className=\"ui two buttons\">\n                            <div\n                                className=\"ui basic green button\"\n                                onClick={() => {\n                                    this.props.setInviteReceiver(user)\n                                    this.props.toggleSendInviteForm()\n                                    }\n                                }\n                            >\n                                Send Invite\n                            </div>\n                            <div\n                            className=\"ui basic red button\"\n                            onClick={() => this.props.deleteContact(contact.id)}\n                            >\n                                Delete\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n    }\n    render() {\n        const contacts = this.props.contacts\n        return (\n            <div className=\"ui raised padded container segment\">\n                    <h1>AddressBook</h1><button \n                        className=\"circular ui right floated icon button\"\n                        style={{ marginTop: '-45px', marginRight: '5px'}}\n                        onClick={this.props.toggleAddContacts}\n                        >\n                        <i className=\"plus icon\"></i>\n                        </button>\n                <div className=\"ui cards\">\n                    {this.renderContacts(contacts)}\n                </div>\n                <br></br>\n                <br></br>\n                <button\n                    className=\"ui right floated button\"\n                    onClick={this.props.toggleViewAddressBook}\n                    style={{ marginTop: '-35px' }}\n                    >\n                    Close\n                </button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.auth.currentUser\n    }\n}\n\nexport default connect(mapStateToProps, { deleteContact, setInviteReceiver, toggleAddContacts })(ViewAddressBook);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\n\nimport { toggleSendInviteForm, sendInvite } from '../actions'\nimport { renderField } from './Utils'\n\nclass SendInviteForm extends Component {\n    onSubmit = (formValues) => {\n        const sender_id = this.props.user.id\n        const receiver_id = this.props.content.inviteReceiver.id\n        const room_name = formValues.roomName\n        const content = formValues.message || ''\n\n        this.props.sendInvite({ sender_id, receiver_id, room_name, content })\n\n    }\n\n    renderForm = () => {\n        return (\n            <form\n                className=\"ui form error\"\n                onSubmit={this.props.handleSubmit(this.onSubmit)}\n\n            >\n\n                <Field\n                    name=\"roomName\"\n                    label=\"room name\"\n                    component={renderField}\n                    type=\"text\"\n                />\n                <Field\n                    name=\"message\"\n                    label=\"message *(optional)\"\n                    component={renderField}\n                    type=\"text\"\n                />\n\n                <button\n                    className=\"ui green button\"\n                    type=\"submit\"\n                >\n                    Submit\n                </button>\n\n                <button\n                        className=\"ui right floated button\"\n                        onClick={this.props.toggleSendInviteForm}\n                    >\n                    Cancel</button>\n            </form>\n        )\n    }\n\n    render() {\n        if (this.props.user) {\n            const receiver = this.props.content.inviteReceiver\n            return (\n                <div className=\"ui raised padded text containe segment\">\n                    <h2>Invite to {receiver.username}</h2>\n                    \n                    {this.renderForm()}\n                </div>\n            )\n        } else {\n            return <div>SendInviteForm</div>\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.auth.currentUser,\n        content: state.content\n    }\n}\n\nconst validate = ({ roomName }) => {\n    const errors = {}\n\n    if (!roomName) {\n        errors.roomName = 'You must enter a unique room name.'\n    }\n\n    return errors\n}\n\nconst formWrapped = reduxForm({\n    form: 'sendInviteForm',\n    validate\n})(SendInviteForm)\n\nexport default connect(mapStateToProps, { toggleSendInviteForm, sendInvite })(formWrapped);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { toggleAddContacts, fetchAllUsers, addContact } from '../actions'\n\nclass ViewAddContacts extends Component {\n    componentDidMount() {\n        this.props.fetchAllUsers()\n    }\n\n    getPossibleContacts = () => {\n        const ownContacts = this.getOwnUniqueContacts()\n        const ownId = this.props.user.id\n        const allUsers = this.props.allUsers\n        const ownContactsIds = ownContacts.map(contact => contact.id)\n        \n        const possibleContacts = allUsers.filter(user => ownContactsIds.includes(user.id) === false && user.id !== ownId)\n\n        return possibleContacts\n    }\n\n    getOwnUniqueContacts = () => {\n        const contacts = this.props.user.contacts.map(contact => contact.user_2)\n        let ids = contacts.map(contact => contact.id)\n\n        let uniqueIds = []\n\n        ids.forEach(id => uniqueIds.includes(id) === false ? uniqueIds.push(id) : null)\n\n        let uniqueContacts = uniqueIds.map(id => contacts.find(contact => contact.id === id))\n\n        return uniqueContacts\n    }\n\n    renderPossibleContacts = () => {\n        const user = this.props.user\n\n        if (!this.props.allUsers) {\n            return (\n                <div className=\"ui active centered inline loader\"></div>\n            )\n        }\n\n        const contacts = this.getPossibleContacts()\n        return contacts.map(contact => {\n            return (\n                <div className=\"item\" key={contact.id}>\n                    <div className=\"right floated content\">\n                        <button\n                            className=\"ui right floated green button\"\n                            onClick={() => this.props.addContact(user.id, contact.id)}\n                        >Add</button>\n                    </div>\n                    <img\n                        className=\"ui avatar image\"\n                        src={contact.image_url}\n                        alt={contact.username}\n                    />\n                    <div className=\"content\">\n                        {contact.username}\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"ui raised padded container segment\">\n                <h2>Add Contacts</h2>\n                <div\n                    className=\"ui middle aligned divided list\"\n                >\n                    {this.renderPossibleContacts()}\n                    <br></br>\n                    <br></br>\n                    <br></br>\n                </div>\n                <button\n                    className=\"ui right floated button\"\n                    style={{ marginTop: '-35px' }}\n                    onClick={this.props.toggleAddContacts}\n                >Close</button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        allUsers: state.content.allUsers,\n        user: state.auth.currentUser\n    }\n}\n\nexport default connect(mapStateToProps, { toggleAddContacts, fetchAllUsers, addContact  })(ViewAddContacts);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport ProfileTile from './ProfileTile'\nimport EditProfile from './EditProfile'\nimport InvitesTile from './InvitesTile'\nimport ViewInvites from './ViewInvites'\nimport MeetingRoomTile from './MeetingRoomTile'\nimport AddressBook from './AddressBook'\nimport ViewAddressBook from './ViewAddressBook'\nimport SendInviteForm from './SendInviteForm'\nimport ViewAddContacts from './ViewAddContacts'\nimport { \n    isEditingProfile,\n    toggleShowInvites,\n    toggleViewAddressBook,\n    toggleSendInviteForm\n} from '../actions'\n\nclass Content extends Component {\n    render() {\n        if (this.props.user) {\n            const { username, city, country, image_url, contacts } = this.props.user\n            const { isEditing, isViewingInvites, isStartingMeeting, isViewingAddressBook, isViewingSendInviteForm, isViewingAddContacts } = this.props.content\n\n            if (isStartingMeeting) {\n                return (\n                    <MeetingRoomTile />\n                )\n            } else if (isEditing) {\n                return (\n                    <EditProfile />\n                )\n            } else if (isViewingInvites) {\n                return (\n                    <ViewInvites\n                        user={this.props.user}\n                    />\n                )\n            } else if (isViewingAddressBook) {\n                return (\n                    <ViewAddressBook\n                        toggleViewAddressBook={this.props.toggleViewAddressBook}\n                        contacts={contacts}\n                        toggleSendInviteForm={this.props.toggleSendInviteForm}\n                    />\n                )\n            } else if (isViewingSendInviteForm) {\n                return (\n                    <SendInviteForm />\n                )\n            } else if (isViewingAddContacts) {\n                return (\n                    <ViewAddContacts />\n                )\n            } else {\n                return (\n                    <div className=\"ui raised padded text container segment\">\n                        <div className=\"ui three stackable cards\">\n                            <ProfileTile\n                                username={username}\n                                city={city}\n                                country={country}\n                                image_url={image_url}\n                                isEditingProfile={this.props.isEditingProfile}\n                            />\n                            <InvitesTile \n                                toggleShowInvites={this.props.toggleShowInvites}\n                            />\n                            <AddressBook\n                                toggleViewAddressBook={this.props.toggleViewAddressBook}\n                            />\n                        </div>\n                    </div>\n                )\n            }\n        } else {\n            return null\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.auth.currentUser,\n        content: state.content\n    }\n}\n\nexport default connect(mapStateToProps, { isEditingProfile, toggleShowInvites, toggleViewAddressBook, toggleSendInviteForm })(Content);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\nimport { renderField } from './Utils'\n\n\nimport { login } from '../actions'\n\nclass LoginForm extends Component {\n    onSubmit = (formValues) => {\n        this.props.login(formValues)\n    }\n\n    renderForm = () => {\n        return (\n            <form className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                <Field \n                    name=\"username\"\n                    label=\"username\"\n                    component={renderField}\n                    type=\"text\"\n                />\n                <Field \n                    name=\"password\"\n                    label=\"password\"\n                    component={renderField}\n                    type=\"password\"\n                />\n                <button \n                    className=\"ui green button\"\n                    type=\"submit\"\n                >\n                    Submit\n                </button>\n                </form>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"ui raised padded text container segment\">\n            <h2>Login</h2>\n                {this.renderForm()}\n            </div>\n        )\n    }\n}\n\nconst validate = (formValues) => {\n    const errors = {}\n\n    if (!formValues.username) {\n        errors.username = 'You must enter a username'\n    }\n\n    if (!formValues.password) {\n        errors.password = 'You must enter a password'\n    }\n\n    return errors\n}\n\nconst formWrapped = reduxForm({\n    form: 'loginForm',\n    validate\n})(LoginForm);\n\nexport default connect(null, { login })(formWrapped);","import React from 'react'\n\nconst About = () => {\n    return (\n        <div className=\"ui raised padded text container segment inverse\">\n            <h2 className=\"ui header\">About</h2>\n            <div>\n                <p>This is a one-on-one video chat app, created by <a href=\"https://github.com/e-barr\">e-barr</a>.</p>\n\n                <p>To get started, please login or sign up using the links above.</p>\n            </div>\n        </div>\n    )\n}\nexport default About","import React from 'react'\n\nconst ContactUs = () => {\n    return (\n        <div className=\"ui raised padded text container segment\">\n            <h2 className=\"ui header\">Contact</h2>\n            <p>If you have any questions, please feel free to contact me at <a href=\"https://github.com/e-barr\">e-barr</a>. If a video demo is more convenient, please feel free to visit the following youtube link: <a href=\"https://www.youtube.com/watch?v=JCo-uO7zeHQ&t=20s\">https://www.youtube.com/watch?v=JCo-uO7zeHQ&t=20s</a>.</p>\n        </div>\n    )\n}\n\nexport default ContactUs","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\n\nimport { renderField } from './Utils'\nimport { signUp } from '../actions'\n\nclass SignUpForm extends Component {\n    onSubmit = (formValues) => {\n        this.props.signUp(formValues)\n    }\n\n    renderForm = () => {\n        return (\n            <form\n            className=\"ui form error\"\n            onSubmit={this.props.handleSubmit(this.onSubmit)}>\n\n                <Field\n                    name=\"email\"\n                    label=\"email\"\n                    component={renderField}\n                    type=\"text\"\n                />\n                <Field\n                    name=\"username\"\n                    label=\"username\"\n                    component={renderField}\n                    type=\"text\"\n                />\n                <Field\n                    name=\"password\"\n                    label=\"password\"\n                    component={renderField}\n                    type=\"password\"\n                />\n                <Field\n                    name=\"confirmPassword\"\n                    label=\"confirm password\"\n                    component={renderField}\n                    type=\"password\"\n                />\n                <Field\n                    name=\"city\"\n                    label=\"city\"\n                    component={renderField}\n                    type=\"text\"\n                />\n                <Field\n                    name=\"country\"\n                    label=\"country\"\n                    component={renderField}\n                    type=\"text\"\n                />\n                <Field\n                    name=\"image_url\"\n                    label=\"image url\"\n                    component={renderField}\n                    type=\"text\"\n                />\n\n                <button\n                    className=\"ui button\"\n                    type=\"submit\"\n                >\n                    Submit\n                </button>\n            </form>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"ui raised padded text container segment\">\n                <h1>Sign Up</h1>\n                {this.renderForm()}\n            </div>\n        )\n    }\n}\n\nconst validate = ({ email, username, password, confirmPassword, city, country, image_url }) => {\n    const errors = {}\n\n    if (!email) {\n        errors.email = 'You must enter an email'\n    }\n\n    if (!username) {\n        errors.username = 'You must enter a username'\n    }\n\n    if (!password) {\n        errors.password = 'You must enter a password'\n    }\n\n    if (password !== confirmPassword) {\n        errors.confirmPassword = 'Your passwords do not match'\n    }\n\n    if (!city) {\n        errors.city = 'You must enter a city'\n    }\n\n    if (!country) {\n        errors.country = 'You must enter a country'\n    }\n\n    if (!image_url) {\n        errors[image_url] = 'You must enter an image url.'\n    }\n\n    return errors\n}\n\nconst formWrapped = reduxForm({\n    form: 'signUpForm',\n    validate\n})(SignUpForm);\n\nexport default connect(null, { signUp })(formWrapped);","import React, { Component } from 'react'\nimport { Router, Switch, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Header from './Header'\nimport Content from './Content'\nimport LoginForm from './LoginForm'\nimport About from './About'\nimport ContactUs from './ContactUs'\nimport SignUpForm from './SignUpForm'\nimport './App.css'\nimport history from '../history'\nimport { getUserInfo } from '../actions'\n\nclass App extends Component {\n  componentDidMount() {\n    if (localStorage.token) {\n      this.props.getUserInfo()\n    }\n  }\n\n  render() {\n    return (\n      <Router history={history}>\n      <div className=\"main\">\n        <div className=\"ui container\">\n            <Header />\n            <Switch>\n              <Route path=\"/main\" exact component={Content} />\n              <Route path=\"/login\" component={LoginForm} exact />\n              <Route path=\"/about\" component={About} exact />\n              <Route path=\"/contact\" component={ContactUs} />\n              <Route path=\"/signup\" component={SignUpForm} />\n              <Route path=\"/\" component={About} />\n            </Switch>\n        </div>\n      </div>\n      </Router>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  }\n}\n\nexport default connect(mapStateToProps, { getUserInfo })(App);\n","import { \n    LOGIN,\n    LOGOUT,\n    SIGN_UP,\n    GET_USER_INFO\n} from '../actions/types'\n\nconst defaultState = {\n    isSignedIn: false,\n    currentUser: null,\n    loginError: null,\n    jwtToken: null,\n}\n\nexport default (state = defaultState, action) => {\n    let { jwt, user } = action.payload || \"\"\n\n    switch(action.type) {\n        case LOGIN:\n            return { \n                ...state,\n                currentUser: user,\n                jwtToken: jwt,\n                isSignedIn: true\n            };\n        case LOGOUT:\n            return { ...defaultState };\n        case SIGN_UP:\n            return {\n                ...state,\n                currentUser: user,\n                jwtToken: jwt,\n                isSignedIn: true\n            };\n        case GET_USER_INFO:\n            return { \n                ...state,\n                currentUser: action.payload,\n                jwtToken: localStorage.token,\n                isSignedIn: true\n            };\n        default:\n            return state;\n    }\n}","import { \n    IS_EDITING_PROFILE,\n    SUBMIT_PROFILE_CHANGES,\n    TOGGLE_SHOW_INVITES,\n    START_MEETING,\n    END_MEETING,\n    TOGGLE_VIEW_ADDRESS_BOOK,\n    TOGGLE_SEND_INVITE_FORM,\n    SET_INVITE_RECEIVER,\n    TOGGLE_ADD_CONTACTS,\n    SET_ALL_USERS,\n } from '../actions/types'\n\nconst defaultState = {\n    isEditing: false,\n    isViewingAllUsers: false,\n    isStartingMeeting: false,\n    enteredRoom: false,\n    isViewingInvites: false,\n    isViewingAddressBook: false,\n    isViewingSendInviteForm: false,\n    isViewingAddContacts: false,\n    inviteReceiver: null,\n    inviteMessage: '',\n    inviteRoomName: null,\n    allUsers: null\n}\n\n\nexport default (state = defaultState, action) => {\n    const { inviteReceiver, inviteMessage, inviteRoomName } = state\n    const updatedDefault = {\n        ...state,\n        inviteReceiver,\n        inviteMessage,\n        inviteRoomName\n    }\n   \n    switch(action.type) {\n        case IS_EDITING_PROFILE:\n            const isEditing = !state.isEditing\n            return {\n                ...updatedDefault,\n                isEditing\n            };\n        case SUBMIT_PROFILE_CHANGES:\n            return {\n                ...defaultState\n            };\n        case TOGGLE_SHOW_INVITES:\n            const isViewingInvites = !state.isViewingInvites\n            return {\n                ...updatedDefault,\n                isViewingInvites\n            }\n        case START_MEETING:\n            return {\n                ...updatedDefault,\n                isStartingMeeting: true\n            }\n        case END_MEETING:\n            return {\n                ...updatedDefault,\n                isStartingMeeting: false,\n            }\n        case TOGGLE_VIEW_ADDRESS_BOOK:\n            const isViewingAddressBook = !state.isViewingAddressBook\n            return {\n                ...updatedDefault,\n                isViewingAddressBook\n            }\n        case TOGGLE_SEND_INVITE_FORM:\n            const isViewingSendInviteForm = !state.isViewingSendInviteForm\n            return {\n                ...defaultState,\n                isViewingSendInviteForm,\n                inviteReceiver\n            }\n        case SET_INVITE_RECEIVER:\n            return {\n                ...updatedDefault,\n                inviteReceiver: action.payload\n            }\n        case TOGGLE_ADD_CONTACTS:\n            const isViewingAddContacts = !state.isViewingAddContacts\n            return {\n                ...defaultState,\n                isViewingAddContacts\n            }\n        case SET_ALL_USERS:\n            const allUsers = action.payload\n            return {\n                ...state,\n                allUsers\n            }\n        default:\n            return state;\n    }\n}\n\n","import { combineReducers } from 'redux'\nimport { reducer as formReducer } from 'redux-form'\n\nimport authReducer from './authReducer'\nimport contentReducer from './contentReducer'\n\nexport default combineReducers({\n    auth: authReducer,\n    form: formReducer,\n    content: contentReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport reduxThunk from 'redux-thunk'\n\nimport App from './components/App'\nimport reducers from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n)\n"],"sourceRoot":""}